ARM GAS  /tmp/ccxxWrxG.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"command_line.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.Print_To_Cli,"ax",%progbits
  18              		.align	1
  19              		.global	Print_To_Cli
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	Print_To_Cli:
  27              	.LFB134:
  28              		.file 1 "Core/Src/command_line.c"
   1:Core/Src/command_line.c **** #include <string.h>
   2:Core/Src/command_line.c **** 
   3:Core/Src/command_line.c **** #include<command_line.h>
   4:Core/Src/command_line.c **** #include<motor.h>
   5:Core/Src/command_line.c **** 
   6:Core/Src/command_line.c **** #define TX_DELAY 1000
   7:Core/Src/command_line.c **** 
   8:Core/Src/command_line.c **** uint8_t command_forward[] = "forward";
   9:Core/Src/command_line.c **** uint8_t command_back[] = "back";
  10:Core/Src/command_line.c **** uint8_t command_left[] = "left";
  11:Core/Src/command_line.c **** uint8_t command_right[] = "right";
  12:Core/Src/command_line.c **** 
  13:Core/Src/command_line.c **** uint8_t command_stop[] = "stop";
  14:Core/Src/command_line.c **** uint8_t command_start[] = "start";
  15:Core/Src/command_line.c **** 
  16:Core/Src/command_line.c **** uint8_t command_speedup[] = "speedup";
  17:Core/Src/command_line.c **** uint8_t command_speeddown[] = "speeddown";
  18:Core/Src/command_line.c **** 
  19:Core/Src/command_line.c **** extern Direction_t Direction_m;
  20:Core/Src/command_line.c **** extern uint8_t data_buffer[];
  21:Core/Src/command_line.c **** extern uint32_t count;
  22:Core/Src/command_line.c **** extern uint8_t command_flag;
  23:Core/Src/command_line.c **** extern uint32_t MotorSpeed;
  24:Core/Src/command_line.c **** 
  25:Core/Src/command_line.c **** extern UART_HandleTypeDef huart1;
  26:Core/Src/command_line.c **** 
  27:Core/Src/command_line.c **** void Print_To_Cli(){
  29              		.loc 1 27 20 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccxxWrxG.s 			page 2


  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33 0000 38B5     		push	{r3, r4, r5, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 16
  36              		.cfi_offset 3, -16
  37              		.cfi_offset 4, -12
  38              		.cfi_offset 5, -8
  39              		.cfi_offset 14, -4
  28:Core/Src/command_line.c ****   //data_buffer[count++]='\r';
  29:Core/Src/command_line.c ****   //data_buffer[count++]='\n';
  30:Core/Src/command_line.c ****   HAL_UART_Transmit(&huart1,data_buffer,count,TX_DELAY); //transmit the full sentence again
  40              		.loc 1 30 3 view .LVU1
  41 0002 074D     		ldr	r5, .L3
  42 0004 074C     		ldr	r4, .L3+4
  43 0006 4FF47A73 		mov	r3, #1000
  44 000a 2A88     		ldrh	r2, [r5]
  45 000c 2146     		mov	r1, r4
  46 000e 0648     		ldr	r0, .L3+8
  47 0010 FFF7FEFF 		bl	HAL_UART_Transmit
  48              	.LVL0:
  31:Core/Src/command_line.c ****   memset(data_buffer, 0, count); // enpty the data buffer
  49              		.loc 1 31 3 view .LVU2
  50 0014 2A68     		ldr	r2, [r5]
  51 0016 0021     		movs	r1, #0
  52 0018 2046     		mov	r0, r4
  53 001a FFF7FEFF 		bl	memset
  54              	.LVL1:
  32:Core/Src/command_line.c **** }
  55              		.loc 1 32 1 is_stmt 0 view .LVU3
  56 001e 38BD     		pop	{r3, r4, r5, pc}
  57              	.L4:
  58              		.align	2
  59              	.L3:
  60 0020 00000000 		.word	count
  61 0024 00000000 		.word	data_buffer
  62 0028 00000000 		.word	huart1
  63              		.cfi_endproc
  64              	.LFE134:
  66              		.section	.text.Clear_Buffer,"ax",%progbits
  67              		.align	1
  68              		.global	Clear_Buffer
  69              		.syntax unified
  70              		.thumb
  71              		.thumb_func
  72              		.fpu fpv4-sp-d16
  74              	Clear_Buffer:
  75              	.LFB135:
  33:Core/Src/command_line.c **** 
  34:Core/Src/command_line.c **** void Clear_Buffer(){
  76              		.loc 1 34 20 is_stmt 1 view -0
  77              		.cfi_startproc
  78              		@ args = 0, pretend = 0, frame = 0
  79              		@ frame_needed = 0, uses_anonymous_args = 0
  80 0000 10B5     		push	{r4, lr}
  81              	.LCFI1:
  82              		.cfi_def_cfa_offset 8
  83              		.cfi_offset 4, -8
ARM GAS  /tmp/ccxxWrxG.s 			page 3


  84              		.cfi_offset 14, -4
  35:Core/Src/command_line.c **** 
  36:Core/Src/command_line.c ****   memset(data_buffer, 0, count); // enpty the data buffer
  85              		.loc 1 36 3 view .LVU5
  86 0002 044C     		ldr	r4, .L7
  87 0004 2268     		ldr	r2, [r4]
  88 0006 0021     		movs	r1, #0
  89 0008 0348     		ldr	r0, .L7+4
  90 000a FFF7FEFF 		bl	memset
  91              	.LVL2:
  37:Core/Src/command_line.c ****   count = 0;
  92              		.loc 1 37 3 view .LVU6
  93              		.loc 1 37 9 is_stmt 0 view .LVU7
  94 000e 0023     		movs	r3, #0
  95 0010 2360     		str	r3, [r4]
  38:Core/Src/command_line.c ****   
  39:Core/Src/command_line.c **** }
  96              		.loc 1 39 1 view .LVU8
  97 0012 10BD     		pop	{r4, pc}
  98              	.L8:
  99              		.align	2
 100              	.L7:
 101 0014 00000000 		.word	count
 102 0018 00000000 		.word	data_buffer
 103              		.cfi_endproc
 104              	.LFE135:
 106              		.section	.text.Get_Command,"ax",%progbits
 107              		.align	1
 108              		.global	Get_Command
 109              		.syntax unified
 110              		.thumb
 111              		.thumb_func
 112              		.fpu fpv4-sp-d16
 114              	Get_Command:
 115              	.LVL3:
 116              	.LFB136:
  40:Core/Src/command_line.c **** 
  41:Core/Src/command_line.c **** void Get_Command(uint8_t data_buffer[]){
 117              		.loc 1 41 40 is_stmt 1 view -0
 118              		.cfi_startproc
 119              		@ args = 0, pretend = 0, frame = 0
 120              		@ frame_needed = 0, uses_anonymous_args = 0
 121              		.loc 1 41 40 is_stmt 0 view .LVU10
 122 0000 10B5     		push	{r4, lr}
 123              	.LCFI2:
 124              		.cfi_def_cfa_offset 8
 125              		.cfi_offset 4, -8
 126              		.cfi_offset 14, -4
 127 0002 0446     		mov	r4, r0
  42:Core/Src/command_line.c ****     char *error_command = "command not found\r\n";
 128              		.loc 1 42 5 is_stmt 1 view .LVU11
 129              	.LVL4:
  43:Core/Src/command_line.c ****     char *command_res = "command found\r\n";
 130              		.loc 1 43 5 view .LVU12
  44:Core/Src/command_line.c ****       if (strcmp((const char*)command_forward, (const char*)data_buffer) == 0){
 131              		.loc 1 44 7 view .LVU13
 132              		.loc 1 44 11 is_stmt 0 view .LVU14
ARM GAS  /tmp/ccxxWrxG.s 			page 4


 133 0004 0146     		mov	r1, r0
 134 0006 7F48     		ldr	r0, .L30
 135              	.LVL5:
 136              		.loc 1 44 11 view .LVU15
 137 0008 FFF7FEFF 		bl	strcmp
 138              	.LVL6:
 139              		.loc 1 44 10 view .LVU16
 140 000c 0028     		cmp	r0, #0
 141 000e 3ED0     		beq	.L22
  45:Core/Src/command_line.c **** 
  46:Core/Src/command_line.c ****             Set_Direction(forward_m);
  47:Core/Src/command_line.c **** 
  48:Core/Src/command_line.c ****             Clear_Buffer();
  49:Core/Src/command_line.c **** 
  50:Core/Src/command_line.c ****             HAL_UART_Transmit(&huart1,(uint8_t*)command_res,strlen(command_res),TX_DELAY); //transm
  51:Core/Src/command_line.c **** 		memset(command_res, 0, strlen(command_res)); // enpty the data buffer
  52:Core/Src/command_line.c ****             command_flag = 0;
  53:Core/Src/command_line.c ****             
  54:Core/Src/command_line.c ****       } else if(strcmp((const char*)command_back, (const char*)data_buffer) == 0){
 142              		.loc 1 54 14 is_stmt 1 view .LVU17
 143              		.loc 1 54 17 is_stmt 0 view .LVU18
 144 0010 2146     		mov	r1, r4
 145 0012 7D48     		ldr	r0, .L30+4
 146 0014 FFF7FEFF 		bl	strcmp
 147              	.LVL7:
 148              		.loc 1 54 16 view .LVU19
 149 0018 0028     		cmp	r0, #0
 150 001a 4DD0     		beq	.L23
  55:Core/Src/command_line.c **** 
  56:Core/Src/command_line.c ****             Set_Direction(back_m);
  57:Core/Src/command_line.c **** 
  58:Core/Src/command_line.c ****             Clear_Buffer();
  59:Core/Src/command_line.c **** 
  60:Core/Src/command_line.c ****             HAL_UART_Transmit(&huart1,(uint8_t*)command_res,strlen(command_res),TX_DELAY); //transm
  61:Core/Src/command_line.c **** 		memset(command_res, 0, strlen(command_res)); // enpty the data buffer
  62:Core/Src/command_line.c ****             command_flag = 0;
  63:Core/Src/command_line.c **** 
  64:Core/Src/command_line.c **** 
  65:Core/Src/command_line.c ****       } else if(strcmp((const char*)command_left, (const char*)data_buffer) == 0){
 151              		.loc 1 65 14 is_stmt 1 view .LVU20
 152              		.loc 1 65 17 is_stmt 0 view .LVU21
 153 001c 2146     		mov	r1, r4
 154 001e 7B48     		ldr	r0, .L30+8
 155 0020 FFF7FEFF 		bl	strcmp
 156              	.LVL8:
 157              		.loc 1 65 16 view .LVU22
 158 0024 0028     		cmp	r0, #0
 159 0026 5DD0     		beq	.L24
  66:Core/Src/command_line.c **** 
  67:Core/Src/command_line.c ****             Set_Direction(left_m);
  68:Core/Src/command_line.c **** 
  69:Core/Src/command_line.c ****             Clear_Buffer();
  70:Core/Src/command_line.c **** 
  71:Core/Src/command_line.c ****             HAL_UART_Transmit(&huart1,(uint8_t*)command_res,strlen(command_res),TX_DELAY); //transm
  72:Core/Src/command_line.c **** 		memset(command_res, 0, strlen(command_res)); // enpty the data buffer
  73:Core/Src/command_line.c ****             command_flag = 0;
  74:Core/Src/command_line.c **** 
ARM GAS  /tmp/ccxxWrxG.s 			page 5


  75:Core/Src/command_line.c ****       } else if(strcmp((const char*)command_right, (const char*)data_buffer) == 0){
 160              		.loc 1 75 14 is_stmt 1 view .LVU23
 161              		.loc 1 75 17 is_stmt 0 view .LVU24
 162 0028 2146     		mov	r1, r4
 163 002a 7948     		ldr	r0, .L30+12
 164 002c FFF7FEFF 		bl	strcmp
 165              	.LVL9:
 166              		.loc 1 75 16 view .LVU25
 167 0030 0028     		cmp	r0, #0
 168 0032 6DD0     		beq	.L25
  76:Core/Src/command_line.c **** 
  77:Core/Src/command_line.c ****             Set_Direction(right_m);
  78:Core/Src/command_line.c **** 
  79:Core/Src/command_line.c ****             Clear_Buffer();
  80:Core/Src/command_line.c **** 
  81:Core/Src/command_line.c ****             HAL_UART_Transmit(&huart1,(uint8_t*)command_res,strlen(command_res),TX_DELAY); //transm
  82:Core/Src/command_line.c **** 		memset(command_res, 0, strlen(command_res)); // enpty the data buffer
  83:Core/Src/command_line.c ****             command_flag = 0;
  84:Core/Src/command_line.c **** 
  85:Core/Src/command_line.c ****       } else if(strcmp((const char*)command_stop, (const char*)data_buffer) == 0){
 169              		.loc 1 85 14 is_stmt 1 view .LVU26
 170              		.loc 1 85 17 is_stmt 0 view .LVU27
 171 0034 2146     		mov	r1, r4
 172 0036 7748     		ldr	r0, .L30+16
 173 0038 FFF7FEFF 		bl	strcmp
 174              	.LVL10:
 175              		.loc 1 85 16 view .LVU28
 176 003c 0028     		cmp	r0, #0
 177 003e 7DD0     		beq	.L26
  86:Core/Src/command_line.c **** 
  87:Core/Src/command_line.c ****             Motor_Deinit();
  88:Core/Src/command_line.c **** 
  89:Core/Src/command_line.c ****             Clear_Buffer();
  90:Core/Src/command_line.c **** 
  91:Core/Src/command_line.c ****             HAL_UART_Transmit(&huart1,(uint8_t*)command_res,strlen(command_res),TX_DELAY); //transm
  92:Core/Src/command_line.c **** 		memset(command_res, 0, strlen(command_res)); // enpty the data buffer
  93:Core/Src/command_line.c ****             command_flag = 0;
  94:Core/Src/command_line.c **** 
  95:Core/Src/command_line.c ****       } else if(strcmp((const char*)command_start, (const char*)data_buffer) == 0){
 178              		.loc 1 95 14 is_stmt 1 view .LVU29
 179              		.loc 1 95 17 is_stmt 0 view .LVU30
 180 0040 2146     		mov	r1, r4
 181 0042 7548     		ldr	r0, .L30+20
 182 0044 FFF7FEFF 		bl	strcmp
 183              	.LVL11:
 184              		.loc 1 95 16 view .LVU31
 185 0048 0028     		cmp	r0, #0
 186 004a 00F08C80 		beq	.L27
  96:Core/Src/command_line.c **** 
  97:Core/Src/command_line.c ****             Motor_Init();
  98:Core/Src/command_line.c **** 
  99:Core/Src/command_line.c ****             Clear_Buffer();
 100:Core/Src/command_line.c **** 
 101:Core/Src/command_line.c ****             HAL_UART_Transmit(&huart1,(uint8_t*)command_res,strlen(command_res),TX_DELAY); //transm
 102:Core/Src/command_line.c **** 		memset(command_res, 0, strlen(command_res)); // enpty the data buffer
 103:Core/Src/command_line.c ****             command_flag = 0;
 104:Core/Src/command_line.c **** 
ARM GAS  /tmp/ccxxWrxG.s 			page 6


 105:Core/Src/command_line.c ****       } else if(strcmp((const char*)command_speedup, (const char*)data_buffer) == 0){
 187              		.loc 1 105 14 is_stmt 1 view .LVU32
 188              		.loc 1 105 17 is_stmt 0 view .LVU33
 189 004e 2146     		mov	r1, r4
 190 0050 7248     		ldr	r0, .L30+24
 191 0052 FFF7FEFF 		bl	strcmp
 192              	.LVL12:
 193              		.loc 1 105 16 view .LVU34
 194 0056 0028     		cmp	r0, #0
 195 0058 40F09F80 		bne	.L17
 106:Core/Src/command_line.c **** 
 107:Core/Src/command_line.c ****             if(MotorSpeed <= 900){
 196              		.loc 1 107 13 is_stmt 1 view .LVU35
 197              		.loc 1 107 27 is_stmt 0 view .LVU36
 198 005c 704B     		ldr	r3, .L30+28
 199 005e 1868     		ldr	r0, [r3]
 200              		.loc 1 107 15 view .LVU37
 201 0060 B0F5617F 		cmp	r0, #900
 202 0064 40F29480 		bls	.L28
 203              	.L18:
 108:Core/Src/command_line.c ****                   MotorSpeed += 50;
 109:Core/Src/command_line.c ****                   Set_motor_Speed(MotorSpeed);
 110:Core/Src/command_line.c ****             }
 111:Core/Src/command_line.c **** 
 112:Core/Src/command_line.c ****             Clear_Buffer();
 204              		.loc 1 112 13 is_stmt 1 view .LVU38
 205 0068 FFF7FEFF 		bl	Clear_Buffer
 206              	.LVL13:
 113:Core/Src/command_line.c **** 
 114:Core/Src/command_line.c ****             HAL_UART_Transmit(&huart1,(uint8_t*)command_res,strlen(command_res),TX_DELAY); //transm
 207              		.loc 1 114 13 view .LVU39
 208 006c 6D4C     		ldr	r4, .L30+32
 209              	.LVL14:
 210              		.loc 1 114 13 is_stmt 0 view .LVU40
 211 006e 4FF47A73 		mov	r3, #1000
 212 0072 0F22     		movs	r2, #15
 213 0074 2146     		mov	r1, r4
 214 0076 6C48     		ldr	r0, .L30+36
 215 0078 FFF7FEFF 		bl	HAL_UART_Transmit
 216              	.LVL15:
 115:Core/Src/command_line.c **** 		memset(command_res, 0, strlen(command_res)); // enpty the data buffer
 217              		.loc 1 115 3 is_stmt 1 view .LVU41
 218 007c 0023     		movs	r3, #0
 219 007e 2360     		str	r3, [r4]
 220 0080 6360     		str	r3, [r4, #4]
 221 0082 A360     		str	r3, [r4, #8]
 222 0084 C4F80B30 		str	r3, [r4, #11]	@ unaligned
 116:Core/Src/command_line.c ****             command_flag = 0;
 223              		.loc 1 116 13 view .LVU42
 224              		.loc 1 116 26 is_stmt 0 view .LVU43
 225 0088 684A     		ldr	r2, .L30+40
 226 008a 1370     		strb	r3, [r2]
 227 008c 13E0     		b	.L9
 228              	.LVL16:
 229              	.L22:
  46:Core/Src/command_line.c **** 
 230              		.loc 1 46 13 is_stmt 1 view .LVU44
ARM GAS  /tmp/ccxxWrxG.s 			page 7


 231 008e FFF7FEFF 		bl	Set_Direction
 232              	.LVL17:
  48:Core/Src/command_line.c **** 
 233              		.loc 1 48 13 view .LVU45
 234 0092 FFF7FEFF 		bl	Clear_Buffer
 235              	.LVL18:
  50:Core/Src/command_line.c **** 		memset(command_res, 0, strlen(command_res)); // enpty the data buffer
 236              		.loc 1 50 13 view .LVU46
 237 0096 634C     		ldr	r4, .L30+32
 238              	.LVL19:
  50:Core/Src/command_line.c **** 		memset(command_res, 0, strlen(command_res)); // enpty the data buffer
 239              		.loc 1 50 13 is_stmt 0 view .LVU47
 240 0098 4FF47A73 		mov	r3, #1000
 241 009c 0F22     		movs	r2, #15
 242 009e 2146     		mov	r1, r4
 243 00a0 6148     		ldr	r0, .L30+36
 244 00a2 FFF7FEFF 		bl	HAL_UART_Transmit
 245              	.LVL20:
  51:Core/Src/command_line.c ****             command_flag = 0;
 246              		.loc 1 51 3 is_stmt 1 view .LVU48
 247 00a6 0023     		movs	r3, #0
 248 00a8 2360     		str	r3, [r4]
 249 00aa 6360     		str	r3, [r4, #4]
 250 00ac A360     		str	r3, [r4, #8]
 251 00ae C4F80B30 		str	r3, [r4, #11]	@ unaligned
  52:Core/Src/command_line.c ****             
 252              		.loc 1 52 13 view .LVU49
  52:Core/Src/command_line.c ****             
 253              		.loc 1 52 26 is_stmt 0 view .LVU50
 254 00b2 5E4A     		ldr	r2, .L30+40
 255 00b4 1370     		strb	r3, [r2]
 256              	.L9:
 117:Core/Src/command_line.c **** 
 118:Core/Src/command_line.c ****       } else if(strcmp((const char*)command_speeddown, (const char*)data_buffer) == 0){
 119:Core/Src/command_line.c **** 
 120:Core/Src/command_line.c ****             if(MotorSpeed >= 100){
 121:Core/Src/command_line.c ****                   MotorSpeed -= 50;
 122:Core/Src/command_line.c ****                   Set_motor_Speed(MotorSpeed);
 123:Core/Src/command_line.c ****             }
 124:Core/Src/command_line.c ****             
 125:Core/Src/command_line.c ****             Clear_Buffer();
 126:Core/Src/command_line.c **** 
 127:Core/Src/command_line.c ****             HAL_UART_Transmit(&huart1,(uint8_t*)command_res,strlen(command_res),TX_DELAY); //transm
 128:Core/Src/command_line.c **** 		memset(command_res, 0, strlen(command_res)); // enpty the data buffer
 129:Core/Src/command_line.c ****             command_flag = 0;
 130:Core/Src/command_line.c **** 
 131:Core/Src/command_line.c ****       } else {
 132:Core/Src/command_line.c ****             
 133:Core/Src/command_line.c ****             Clear_Buffer();
 134:Core/Src/command_line.c **** 
 135:Core/Src/command_line.c ****             HAL_UART_Transmit(&huart1,(uint8_t*)error_command,strlen(error_command),TX_DELAY); //tr
 136:Core/Src/command_line.c **** 		memset(error_command, 0, strlen(error_command)); // enpty the data buffer
 137:Core/Src/command_line.c ****             command_flag = 0;
 138:Core/Src/command_line.c **** 
 139:Core/Src/command_line.c ****       }
 140:Core/Src/command_line.c **** }
 257              		.loc 1 140 1 view .LVU51
ARM GAS  /tmp/ccxxWrxG.s 			page 8


 258 00b6 10BD     		pop	{r4, pc}
 259              	.LVL21:
 260              	.L23:
  56:Core/Src/command_line.c **** 
 261              		.loc 1 56 13 is_stmt 1 view .LVU52
 262 00b8 0120     		movs	r0, #1
 263 00ba FFF7FEFF 		bl	Set_Direction
 264              	.LVL22:
  58:Core/Src/command_line.c **** 
 265              		.loc 1 58 13 view .LVU53
 266 00be FFF7FEFF 		bl	Clear_Buffer
 267              	.LVL23:
  60:Core/Src/command_line.c **** 		memset(command_res, 0, strlen(command_res)); // enpty the data buffer
 268              		.loc 1 60 13 view .LVU54
 269 00c2 584C     		ldr	r4, .L30+32
 270              	.LVL24:
  60:Core/Src/command_line.c **** 		memset(command_res, 0, strlen(command_res)); // enpty the data buffer
 271              		.loc 1 60 13 is_stmt 0 view .LVU55
 272 00c4 4FF47A73 		mov	r3, #1000
 273 00c8 0F22     		movs	r2, #15
 274 00ca 2146     		mov	r1, r4
 275 00cc 5648     		ldr	r0, .L30+36
 276 00ce FFF7FEFF 		bl	HAL_UART_Transmit
 277              	.LVL25:
  61:Core/Src/command_line.c ****             command_flag = 0;
 278              		.loc 1 61 3 is_stmt 1 view .LVU56
 279 00d2 0023     		movs	r3, #0
 280 00d4 2360     		str	r3, [r4]
 281 00d6 6360     		str	r3, [r4, #4]
 282 00d8 A360     		str	r3, [r4, #8]
 283 00da C4F80B30 		str	r3, [r4, #11]	@ unaligned
  62:Core/Src/command_line.c **** 
 284              		.loc 1 62 13 view .LVU57
  62:Core/Src/command_line.c **** 
 285              		.loc 1 62 26 is_stmt 0 view .LVU58
 286 00de 534A     		ldr	r2, .L30+40
 287 00e0 1370     		strb	r3, [r2]
 288 00e2 E8E7     		b	.L9
 289              	.LVL26:
 290              	.L24:
  67:Core/Src/command_line.c **** 
 291              		.loc 1 67 13 is_stmt 1 view .LVU59
 292 00e4 0220     		movs	r0, #2
 293 00e6 FFF7FEFF 		bl	Set_Direction
 294              	.LVL27:
  69:Core/Src/command_line.c **** 
 295              		.loc 1 69 13 view .LVU60
 296 00ea FFF7FEFF 		bl	Clear_Buffer
 297              	.LVL28:
  71:Core/Src/command_line.c **** 		memset(command_res, 0, strlen(command_res)); // enpty the data buffer
 298              		.loc 1 71 13 view .LVU61
 299 00ee 4D4C     		ldr	r4, .L30+32
 300              	.LVL29:
  71:Core/Src/command_line.c **** 		memset(command_res, 0, strlen(command_res)); // enpty the data buffer
 301              		.loc 1 71 13 is_stmt 0 view .LVU62
 302 00f0 4FF47A73 		mov	r3, #1000
 303 00f4 0F22     		movs	r2, #15
ARM GAS  /tmp/ccxxWrxG.s 			page 9


 304 00f6 2146     		mov	r1, r4
 305 00f8 4B48     		ldr	r0, .L30+36
 306 00fa FFF7FEFF 		bl	HAL_UART_Transmit
 307              	.LVL30:
  72:Core/Src/command_line.c ****             command_flag = 0;
 308              		.loc 1 72 3 is_stmt 1 view .LVU63
 309 00fe 0023     		movs	r3, #0
 310 0100 2360     		str	r3, [r4]
 311 0102 6360     		str	r3, [r4, #4]
 312 0104 A360     		str	r3, [r4, #8]
 313 0106 C4F80B30 		str	r3, [r4, #11]	@ unaligned
  73:Core/Src/command_line.c **** 
 314              		.loc 1 73 13 view .LVU64
  73:Core/Src/command_line.c **** 
 315              		.loc 1 73 26 is_stmt 0 view .LVU65
 316 010a 484A     		ldr	r2, .L30+40
 317 010c 1370     		strb	r3, [r2]
 318 010e D2E7     		b	.L9
 319              	.LVL31:
 320              	.L25:
  77:Core/Src/command_line.c **** 
 321              		.loc 1 77 13 is_stmt 1 view .LVU66
 322 0110 0320     		movs	r0, #3
 323 0112 FFF7FEFF 		bl	Set_Direction
 324              	.LVL32:
  79:Core/Src/command_line.c **** 
 325              		.loc 1 79 13 view .LVU67
 326 0116 FFF7FEFF 		bl	Clear_Buffer
 327              	.LVL33:
  81:Core/Src/command_line.c **** 		memset(command_res, 0, strlen(command_res)); // enpty the data buffer
 328              		.loc 1 81 13 view .LVU68
 329 011a 424C     		ldr	r4, .L30+32
 330              	.LVL34:
  81:Core/Src/command_line.c **** 		memset(command_res, 0, strlen(command_res)); // enpty the data buffer
 331              		.loc 1 81 13 is_stmt 0 view .LVU69
 332 011c 4FF47A73 		mov	r3, #1000
 333 0120 0F22     		movs	r2, #15
 334 0122 2146     		mov	r1, r4
 335 0124 4048     		ldr	r0, .L30+36
 336 0126 FFF7FEFF 		bl	HAL_UART_Transmit
 337              	.LVL35:
  82:Core/Src/command_line.c ****             command_flag = 0;
 338              		.loc 1 82 3 is_stmt 1 view .LVU70
 339 012a 0023     		movs	r3, #0
 340 012c 2360     		str	r3, [r4]
 341 012e 6360     		str	r3, [r4, #4]
 342 0130 A360     		str	r3, [r4, #8]
 343 0132 C4F80B30 		str	r3, [r4, #11]	@ unaligned
  83:Core/Src/command_line.c **** 
 344              		.loc 1 83 13 view .LVU71
  83:Core/Src/command_line.c **** 
 345              		.loc 1 83 26 is_stmt 0 view .LVU72
 346 0136 3D4A     		ldr	r2, .L30+40
 347 0138 1370     		strb	r3, [r2]
 348 013a BCE7     		b	.L9
 349              	.LVL36:
 350              	.L26:
ARM GAS  /tmp/ccxxWrxG.s 			page 10


  87:Core/Src/command_line.c **** 
 351              		.loc 1 87 13 is_stmt 1 view .LVU73
 352 013c FFF7FEFF 		bl	Motor_Deinit
 353              	.LVL37:
  89:Core/Src/command_line.c **** 
 354              		.loc 1 89 13 view .LVU74
 355 0140 FFF7FEFF 		bl	Clear_Buffer
 356              	.LVL38:
  91:Core/Src/command_line.c **** 		memset(command_res, 0, strlen(command_res)); // enpty the data buffer
 357              		.loc 1 91 13 view .LVU75
 358 0144 374C     		ldr	r4, .L30+32
 359              	.LVL39:
  91:Core/Src/command_line.c **** 		memset(command_res, 0, strlen(command_res)); // enpty the data buffer
 360              		.loc 1 91 13 is_stmt 0 view .LVU76
 361 0146 4FF47A73 		mov	r3, #1000
 362 014a 0F22     		movs	r2, #15
 363 014c 2146     		mov	r1, r4
 364 014e 3648     		ldr	r0, .L30+36
 365 0150 FFF7FEFF 		bl	HAL_UART_Transmit
 366              	.LVL40:
  92:Core/Src/command_line.c ****             command_flag = 0;
 367              		.loc 1 92 3 is_stmt 1 view .LVU77
 368 0154 0023     		movs	r3, #0
 369 0156 2360     		str	r3, [r4]
 370 0158 6360     		str	r3, [r4, #4]
 371 015a A360     		str	r3, [r4, #8]
 372 015c C4F80B30 		str	r3, [r4, #11]	@ unaligned
  93:Core/Src/command_line.c **** 
 373              		.loc 1 93 13 view .LVU78
  93:Core/Src/command_line.c **** 
 374              		.loc 1 93 26 is_stmt 0 view .LVU79
 375 0160 324A     		ldr	r2, .L30+40
 376 0162 1370     		strb	r3, [r2]
 377 0164 A7E7     		b	.L9
 378              	.LVL41:
 379              	.L27:
  97:Core/Src/command_line.c **** 
 380              		.loc 1 97 13 is_stmt 1 view .LVU80
 381 0166 FFF7FEFF 		bl	Motor_Init
 382              	.LVL42:
  99:Core/Src/command_line.c **** 
 383              		.loc 1 99 13 view .LVU81
 384 016a FFF7FEFF 		bl	Clear_Buffer
 385              	.LVL43:
 101:Core/Src/command_line.c **** 		memset(command_res, 0, strlen(command_res)); // enpty the data buffer
 386              		.loc 1 101 13 view .LVU82
 387 016e 2D4C     		ldr	r4, .L30+32
 388              	.LVL44:
 101:Core/Src/command_line.c **** 		memset(command_res, 0, strlen(command_res)); // enpty the data buffer
 389              		.loc 1 101 13 is_stmt 0 view .LVU83
 390 0170 4FF47A73 		mov	r3, #1000
 391 0174 0F22     		movs	r2, #15
 392 0176 2146     		mov	r1, r4
 393 0178 2B48     		ldr	r0, .L30+36
 394 017a FFF7FEFF 		bl	HAL_UART_Transmit
 395              	.LVL45:
 102:Core/Src/command_line.c ****             command_flag = 0;
ARM GAS  /tmp/ccxxWrxG.s 			page 11


 396              		.loc 1 102 3 is_stmt 1 view .LVU84
 397 017e 0023     		movs	r3, #0
 398 0180 2360     		str	r3, [r4]
 399 0182 6360     		str	r3, [r4, #4]
 400 0184 A360     		str	r3, [r4, #8]
 401 0186 C4F80B30 		str	r3, [r4, #11]	@ unaligned
 103:Core/Src/command_line.c **** 
 402              		.loc 1 103 13 view .LVU85
 103:Core/Src/command_line.c **** 
 403              		.loc 1 103 26 is_stmt 0 view .LVU86
 404 018a 284A     		ldr	r2, .L30+40
 405 018c 1370     		strb	r3, [r2]
 406 018e 92E7     		b	.L9
 407              	.LVL46:
 408              	.L28:
 108:Core/Src/command_line.c ****                   Set_motor_Speed(MotorSpeed);
 409              		.loc 1 108 19 is_stmt 1 view .LVU87
 108:Core/Src/command_line.c ****                   Set_motor_Speed(MotorSpeed);
 410              		.loc 1 108 30 is_stmt 0 view .LVU88
 411 0190 3230     		adds	r0, r0, #50
 412 0192 1860     		str	r0, [r3]
 109:Core/Src/command_line.c ****             }
 413              		.loc 1 109 19 is_stmt 1 view .LVU89
 414 0194 FFF7FEFF 		bl	Set_motor_Speed
 415              	.LVL47:
 416 0198 66E7     		b	.L18
 417              	.L17:
 118:Core/Src/command_line.c **** 
 418              		.loc 1 118 14 view .LVU90
 118:Core/Src/command_line.c **** 
 419              		.loc 1 118 17 is_stmt 0 view .LVU91
 420 019a 2146     		mov	r1, r4
 421 019c 2448     		ldr	r0, .L30+44
 422 019e FFF7FEFF 		bl	strcmp
 423              	.LVL48:
 118:Core/Src/command_line.c **** 
 424              		.loc 1 118 16 view .LVU92
 425 01a2 D8B9     		cbnz	r0, .L19
 120:Core/Src/command_line.c ****                   MotorSpeed -= 50;
 426              		.loc 1 120 13 is_stmt 1 view .LVU93
 120:Core/Src/command_line.c ****                   MotorSpeed -= 50;
 427              		.loc 1 120 27 is_stmt 0 view .LVU94
 428 01a4 1E4B     		ldr	r3, .L30+28
 429 01a6 1868     		ldr	r0, [r3]
 120:Core/Src/command_line.c ****                   MotorSpeed -= 50;
 430              		.loc 1 120 15 view .LVU95
 431 01a8 6328     		cmp	r0, #99
 432 01aa 12D8     		bhi	.L29
 433              	.L20:
 125:Core/Src/command_line.c **** 
 434              		.loc 1 125 13 is_stmt 1 view .LVU96
 435 01ac FFF7FEFF 		bl	Clear_Buffer
 436              	.LVL49:
 127:Core/Src/command_line.c **** 		memset(command_res, 0, strlen(command_res)); // enpty the data buffer
 437              		.loc 1 127 13 view .LVU97
 438 01b0 1C4C     		ldr	r4, .L30+32
 439              	.LVL50:
ARM GAS  /tmp/ccxxWrxG.s 			page 12


 127:Core/Src/command_line.c **** 		memset(command_res, 0, strlen(command_res)); // enpty the data buffer
 440              		.loc 1 127 13 is_stmt 0 view .LVU98
 441 01b2 4FF47A73 		mov	r3, #1000
 442 01b6 0F22     		movs	r2, #15
 443 01b8 2146     		mov	r1, r4
 444 01ba 1B48     		ldr	r0, .L30+36
 445 01bc FFF7FEFF 		bl	HAL_UART_Transmit
 446              	.LVL51:
 128:Core/Src/command_line.c ****             command_flag = 0;
 447              		.loc 1 128 3 is_stmt 1 view .LVU99
 448 01c0 0023     		movs	r3, #0
 449 01c2 2360     		str	r3, [r4]
 450 01c4 6360     		str	r3, [r4, #4]
 451 01c6 A360     		str	r3, [r4, #8]
 452 01c8 C4F80B30 		str	r3, [r4, #11]	@ unaligned
 129:Core/Src/command_line.c **** 
 453              		.loc 1 129 13 view .LVU100
 129:Core/Src/command_line.c **** 
 454              		.loc 1 129 26 is_stmt 0 view .LVU101
 455 01cc 174A     		ldr	r2, .L30+40
 456 01ce 1370     		strb	r3, [r2]
 457 01d0 71E7     		b	.L9
 458              	.LVL52:
 459              	.L29:
 121:Core/Src/command_line.c ****                   Set_motor_Speed(MotorSpeed);
 460              		.loc 1 121 19 is_stmt 1 view .LVU102
 121:Core/Src/command_line.c ****                   Set_motor_Speed(MotorSpeed);
 461              		.loc 1 121 30 is_stmt 0 view .LVU103
 462 01d2 3238     		subs	r0, r0, #50
 463 01d4 1860     		str	r0, [r3]
 122:Core/Src/command_line.c ****             }
 464              		.loc 1 122 19 is_stmt 1 view .LVU104
 465 01d6 FFF7FEFF 		bl	Set_motor_Speed
 466              	.LVL53:
 467 01da E7E7     		b	.L20
 468              	.L19:
 133:Core/Src/command_line.c **** 
 469              		.loc 1 133 13 view .LVU105
 470 01dc FFF7FEFF 		bl	Clear_Buffer
 471              	.LVL54:
 135:Core/Src/command_line.c **** 		memset(error_command, 0, strlen(error_command)); // enpty the data buffer
 472              		.loc 1 135 13 view .LVU106
 473 01e0 144C     		ldr	r4, .L30+48
 474              	.LVL55:
 135:Core/Src/command_line.c **** 		memset(error_command, 0, strlen(error_command)); // enpty the data buffer
 475              		.loc 1 135 13 is_stmt 0 view .LVU107
 476 01e2 4FF47A73 		mov	r3, #1000
 477 01e6 1322     		movs	r2, #19
 478 01e8 2146     		mov	r1, r4
 479 01ea 0F48     		ldr	r0, .L30+36
 480 01ec FFF7FEFF 		bl	HAL_UART_Transmit
 481              	.LVL56:
 136:Core/Src/command_line.c ****             command_flag = 0;
 482              		.loc 1 136 3 is_stmt 1 view .LVU108
 483 01f0 0023     		movs	r3, #0
 484 01f2 2360     		str	r3, [r4]
 485 01f4 6360     		str	r3, [r4, #4]
ARM GAS  /tmp/ccxxWrxG.s 			page 13


 486 01f6 A360     		str	r3, [r4, #8]
 487 01f8 E360     		str	r3, [r4, #12]
 488 01fa C4F80F30 		str	r3, [r4, #15]	@ unaligned
 137:Core/Src/command_line.c **** 
 489              		.loc 1 137 13 view .LVU109
 137:Core/Src/command_line.c **** 
 490              		.loc 1 137 26 is_stmt 0 view .LVU110
 491 01fe 0B4A     		ldr	r2, .L30+40
 492 0200 1370     		strb	r3, [r2]
 493              		.loc 1 140 1 view .LVU111
 494 0202 58E7     		b	.L9
 495              	.L31:
 496              		.align	2
 497              	.L30:
 498 0204 00000000 		.word	.LANCHOR0
 499 0208 00000000 		.word	.LANCHOR1
 500 020c 00000000 		.word	.LANCHOR2
 501 0210 00000000 		.word	.LANCHOR3
 502 0214 00000000 		.word	.LANCHOR4
 503 0218 00000000 		.word	.LANCHOR5
 504 021c 00000000 		.word	.LANCHOR6
 505 0220 00000000 		.word	MotorSpeed
 506 0224 00000000 		.word	.LC0
 507 0228 00000000 		.word	huart1
 508 022c 00000000 		.word	command_flag
 509 0230 00000000 		.word	.LANCHOR7
 510 0234 10000000 		.word	.LC1
 511              		.cfi_endproc
 512              	.LFE136:
 514              		.global	command_speeddown
 515              		.global	command_speedup
 516              		.global	command_start
 517              		.global	command_stop
 518              		.global	command_right
 519              		.global	command_left
 520              		.global	command_back
 521              		.global	command_forward
 522              		.section	.data.command_back,"aw"
 523              		.align	2
 524              		.set	.LANCHOR1,. + 0
 527              	command_back:
 528 0000 6261636B 		.ascii	"back\000"
 528      00
 529              		.section	.data.command_forward,"aw"
 530              		.align	2
 531              		.set	.LANCHOR0,. + 0
 534              	command_forward:
 535 0000 666F7277 		.ascii	"forward\000"
 535      61726400 
 536              		.section	.data.command_left,"aw"
 537              		.align	2
 538              		.set	.LANCHOR2,. + 0
 541              	command_left:
 542 0000 6C656674 		.ascii	"left\000"
 542      00
 543              		.section	.data.command_right,"aw"
 544              		.align	2
ARM GAS  /tmp/ccxxWrxG.s 			page 14


 545              		.set	.LANCHOR3,. + 0
 548              	command_right:
 549 0000 72696768 		.ascii	"right\000"
 549      7400
 550              		.section	.data.command_speeddown,"aw"
 551              		.align	2
 552              		.set	.LANCHOR7,. + 0
 555              	command_speeddown:
 556 0000 73706565 		.ascii	"speeddown\000"
 556      64646F77 
 556      6E00
 557              		.section	.data.command_speedup,"aw"
 558              		.align	2
 559              		.set	.LANCHOR6,. + 0
 562              	command_speedup:
 563 0000 73706565 		.ascii	"speedup\000"
 563      64757000 
 564              		.section	.data.command_start,"aw"
 565              		.align	2
 566              		.set	.LANCHOR5,. + 0
 569              	command_start:
 570 0000 73746172 		.ascii	"start\000"
 570      7400
 571              		.section	.data.command_stop,"aw"
 572              		.align	2
 573              		.set	.LANCHOR4,. + 0
 576              	command_stop:
 577 0000 73746F70 		.ascii	"stop\000"
 577      00
 578              		.section	.rodata.Get_Command.str1.4,"aMS",%progbits,1
 579              		.align	2
 580              	.LC0:
 581 0000 636F6D6D 		.ascii	"command found\015\012\000"
 581      616E6420 
 581      666F756E 
 581      640D0A00 
 582              	.LC1:
 583 0010 636F6D6D 		.ascii	"command not found\015\012\000"
 583      616E6420 
 583      6E6F7420 
 583      666F756E 
 583      640D0A00 
 584              		.text
 585              	.Letext0:
 586              		.file 2 "/usr/lib/gcc/arm-none-eabi/8.3.1/include/stddef.h"
 587              		.file 3 "/usr/arm-none-eabi/include/machine/_default_types.h"
 588              		.file 4 "/usr/arm-none-eabi/include/sys/_types.h"
 589              		.file 5 "/usr/arm-none-eabi/include/sys/reent.h"
 590              		.file 6 "/usr/arm-none-eabi/include/sys/lock.h"
 591              		.file 7 "/usr/arm-none-eabi/include/sys/_stdint.h"
 592              		.file 8 "Drivers/CMSIS/Include/core_cm4.h"
 593              		.file 9 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 594              		.file 10 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f401xc.h"
 595              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 596              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 597              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 598              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  /tmp/ccxxWrxG.s 			page 15


 599              		.file 15 "Core/Inc/motor.h"
 600              		.file 16 "/usr/arm-none-eabi/include/string.h"
 601              		.file 17 "<built-in>"
ARM GAS  /tmp/ccxxWrxG.s 			page 16


DEFINED SYMBOLS
                            *ABS*:0000000000000000 command_line.c
     /tmp/ccxxWrxG.s:18     .text.Print_To_Cli:0000000000000000 $t
     /tmp/ccxxWrxG.s:26     .text.Print_To_Cli:0000000000000000 Print_To_Cli
     /tmp/ccxxWrxG.s:60     .text.Print_To_Cli:0000000000000020 $d
     /tmp/ccxxWrxG.s:67     .text.Clear_Buffer:0000000000000000 $t
     /tmp/ccxxWrxG.s:74     .text.Clear_Buffer:0000000000000000 Clear_Buffer
     /tmp/ccxxWrxG.s:101    .text.Clear_Buffer:0000000000000014 $d
     /tmp/ccxxWrxG.s:107    .text.Get_Command:0000000000000000 $t
     /tmp/ccxxWrxG.s:114    .text.Get_Command:0000000000000000 Get_Command
     /tmp/ccxxWrxG.s:498    .text.Get_Command:0000000000000204 $d
     /tmp/ccxxWrxG.s:555    .data.command_speeddown:0000000000000000 command_speeddown
     /tmp/ccxxWrxG.s:562    .data.command_speedup:0000000000000000 command_speedup
     /tmp/ccxxWrxG.s:569    .data.command_start:0000000000000000 command_start
     /tmp/ccxxWrxG.s:576    .data.command_stop:0000000000000000 command_stop
     /tmp/ccxxWrxG.s:548    .data.command_right:0000000000000000 command_right
     /tmp/ccxxWrxG.s:541    .data.command_left:0000000000000000 command_left
     /tmp/ccxxWrxG.s:527    .data.command_back:0000000000000000 command_back
     /tmp/ccxxWrxG.s:534    .data.command_forward:0000000000000000 command_forward
     /tmp/ccxxWrxG.s:523    .data.command_back:0000000000000000 $d
     /tmp/ccxxWrxG.s:530    .data.command_forward:0000000000000000 $d
     /tmp/ccxxWrxG.s:537    .data.command_left:0000000000000000 $d
     /tmp/ccxxWrxG.s:544    .data.command_right:0000000000000000 $d
     /tmp/ccxxWrxG.s:551    .data.command_speeddown:0000000000000000 $d
     /tmp/ccxxWrxG.s:558    .data.command_speedup:0000000000000000 $d
     /tmp/ccxxWrxG.s:565    .data.command_start:0000000000000000 $d
     /tmp/ccxxWrxG.s:572    .data.command_stop:0000000000000000 $d
     /tmp/ccxxWrxG.s:579    .rodata.Get_Command.str1.4:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_UART_Transmit
memset
count
data_buffer
huart1
strcmp
Set_Direction
Motor_Deinit
Motor_Init
Set_motor_Speed
MotorSpeed
command_flag
