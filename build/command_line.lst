ARM GAS  /tmp/ccEvSrmF.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"command_line.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.Print_To_Cli,"ax",%progbits
  16              		.align	1
  17              		.global	Print_To_Cli
  18              		.arch armv7-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	Print_To_Cli:
  25              	.LFB73:
  26              		.file 1 "Core/Src/command_line.c"
   1:Core/Src/command_line.c **** #include <string.h>
   2:Core/Src/command_line.c **** #include "stm32f2xx_hal.h"
   3:Core/Src/command_line.c **** 
   4:Core/Src/command_line.c **** #include<command_line.h>
   5:Core/Src/command_line.c **** #include<led_color.h>
   6:Core/Src/command_line.c **** 
   7:Core/Src/command_line.c **** #define TX_DELAY 1000
   8:Core/Src/command_line.c **** 
   9:Core/Src/command_line.c **** uint8_t command_colors[] = "colors";
  10:Core/Src/command_line.c **** uint8_t command_black[] = "black";
  11:Core/Src/command_line.c **** uint8_t command_white[] = "white";
  12:Core/Src/command_line.c **** uint8_t command_red[] = "red";
  13:Core/Src/command_line.c **** uint8_t command_green[] = "green";
  14:Core/Src/command_line.c **** uint8_t command_blue[] = "blue";
  15:Core/Src/command_line.c **** uint8_t command_yellow[] = "yellow";
  16:Core/Src/command_line.c **** uint8_t command_aqua[] = "aqua";
  17:Core/Src/command_line.c **** uint8_t command_fuchsia[] = "fuchsia";
  18:Core/Src/command_line.c **** 
  19:Core/Src/command_line.c **** uint8_t command_br0[] = "br0";
  20:Core/Src/command_line.c **** uint8_t command_br1[] = "br1";
  21:Core/Src/command_line.c **** uint8_t command_br2[] = "br2";
  22:Core/Src/command_line.c **** uint8_t command_br3[] = "br3";
  23:Core/Src/command_line.c **** 
  24:Core/Src/command_line.c **** 
  25:Core/Src/command_line.c **** 
  26:Core/Src/command_line.c **** extern led_c LedColor;
  27:Core/Src/command_line.c **** extern uint8_t data_buffer[];
  28:Core/Src/command_line.c **** extern uint32_t count;
  29:Core/Src/command_line.c **** extern uint8_t command_flag;
  30:Core/Src/command_line.c **** extern uint8_t brightness;
  31:Core/Src/command_line.c **** 
  32:Core/Src/command_line.c **** extern UART_HandleTypeDef huart1;
ARM GAS  /tmp/ccEvSrmF.s 			page 2


  33:Core/Src/command_line.c **** 
  34:Core/Src/command_line.c **** void Get_Command(uint8_t data_buffer[]){
  35:Core/Src/command_line.c ****     char *error_command = "command not found\r\n";
  36:Core/Src/command_line.c ****     char *color_log = "color found\r\n";
  37:Core/Src/command_line.c ****       if (strcmp((const char*)command_black, (const char*)data_buffer) == 0){
  38:Core/Src/command_line.c **** 
  39:Core/Src/command_line.c ****             Print_To_Cli();
  40:Core/Src/command_line.c **** 
  41:Core/Src/command_line.c ****             HAL_UART_Transmit(&huart1,(uint8_t*)color_log,strlen(color_log),TX_DELAY); //transmit t
  42:Core/Src/command_line.c **** 		memset(color_log, 0, strlen(color_log)); // enpty the data buffer
  43:Core/Src/command_line.c ****             command_flag = 0;
  44:Core/Src/command_line.c **** 
  45:Core/Src/command_line.c ****             LedColor = black;
  46:Core/Src/command_line.c ****             Set_Led_Color(LedColor,brightness);
  47:Core/Src/command_line.c ****             
  48:Core/Src/command_line.c ****       } else if(strcmp((const char*)command_white, (const char*)data_buffer) == 0){
  49:Core/Src/command_line.c **** 
  50:Core/Src/command_line.c ****             Print_To_Cli();
  51:Core/Src/command_line.c **** 
  52:Core/Src/command_line.c ****             HAL_UART_Transmit(&huart1,(uint8_t*)color_log,strlen(color_log),TX_DELAY); //transmit t
  53:Core/Src/command_line.c **** 		memset(color_log, 0, strlen(color_log)); // enpty the data buffer
  54:Core/Src/command_line.c ****             command_flag = 0;
  55:Core/Src/command_line.c **** 
  56:Core/Src/command_line.c ****             LedColor = white;
  57:Core/Src/command_line.c ****             Set_Led_Color(LedColor,brightness);
  58:Core/Src/command_line.c **** 
  59:Core/Src/command_line.c ****       } else if(strcmp((const char*)command_red, (const char*)data_buffer) == 0){
  60:Core/Src/command_line.c **** 
  61:Core/Src/command_line.c ****             Print_To_Cli();
  62:Core/Src/command_line.c **** 
  63:Core/Src/command_line.c ****             HAL_UART_Transmit(&huart1,(uint8_t*)color_log,strlen(color_log),TX_DELAY); //transmit t
  64:Core/Src/command_line.c **** 		memset(color_log, 0, strlen(color_log)); // enpty the data buffer
  65:Core/Src/command_line.c ****             command_flag = 0;
  66:Core/Src/command_line.c **** 
  67:Core/Src/command_line.c ****             LedColor = red;
  68:Core/Src/command_line.c ****             Set_Led_Color(LedColor,brightness);
  69:Core/Src/command_line.c **** 
  70:Core/Src/command_line.c ****       } else if(strcmp((const char*)command_green, (const char*)data_buffer) == 0){
  71:Core/Src/command_line.c **** 
  72:Core/Src/command_line.c ****             Print_To_Cli();
  73:Core/Src/command_line.c **** 
  74:Core/Src/command_line.c ****             HAL_UART_Transmit(&huart1,(uint8_t*)color_log,strlen(color_log),TX_DELAY); //transmit t
  75:Core/Src/command_line.c **** 		memset(color_log, 0, strlen(color_log)); // enpty the data buffer
  76:Core/Src/command_line.c ****             command_flag = 0;
  77:Core/Src/command_line.c **** 
  78:Core/Src/command_line.c ****             LedColor = green;
  79:Core/Src/command_line.c ****             Set_Led_Color(LedColor,brightness);
  80:Core/Src/command_line.c **** 
  81:Core/Src/command_line.c ****       } else if(strcmp((const char*)command_blue, (const char*)data_buffer) == 0){
  82:Core/Src/command_line.c **** 
  83:Core/Src/command_line.c ****             Print_To_Cli();
  84:Core/Src/command_line.c **** 
  85:Core/Src/command_line.c ****             HAL_UART_Transmit(&huart1,(uint8_t*)color_log,strlen(color_log),TX_DELAY); //transmit t
  86:Core/Src/command_line.c **** 		memset(color_log, 0, strlen(color_log)); // enpty the data buffer
  87:Core/Src/command_line.c ****             command_flag = 0;
  88:Core/Src/command_line.c **** 
  89:Core/Src/command_line.c ****             LedColor = blue;
ARM GAS  /tmp/ccEvSrmF.s 			page 3


  90:Core/Src/command_line.c ****             Set_Led_Color(LedColor,brightness);
  91:Core/Src/command_line.c **** 
  92:Core/Src/command_line.c ****       } else if(strcmp((const char*)command_yellow, (const char*)data_buffer) == 0){
  93:Core/Src/command_line.c **** 
  94:Core/Src/command_line.c ****             Print_To_Cli();
  95:Core/Src/command_line.c **** 
  96:Core/Src/command_line.c ****             HAL_UART_Transmit(&huart1,(uint8_t*)color_log,strlen(color_log),TX_DELAY); //transmit t
  97:Core/Src/command_line.c **** 		memset(color_log, 0, strlen(color_log)); // enpty the data buffer
  98:Core/Src/command_line.c ****             command_flag = 0;
  99:Core/Src/command_line.c **** 
 100:Core/Src/command_line.c ****             LedColor = yellow;
 101:Core/Src/command_line.c ****             Set_Led_Color(LedColor,brightness);
 102:Core/Src/command_line.c **** 
 103:Core/Src/command_line.c ****       } else if(strcmp((const char*)command_aqua, (const char*)data_buffer) == 0){
 104:Core/Src/command_line.c **** 
 105:Core/Src/command_line.c ****             Print_To_Cli();
 106:Core/Src/command_line.c **** 
 107:Core/Src/command_line.c ****             HAL_UART_Transmit(&huart1,(uint8_t*)color_log,strlen(color_log),TX_DELAY); //transmit t
 108:Core/Src/command_line.c **** 		memset(color_log, 0, strlen(color_log)); // enpty the data buffer
 109:Core/Src/command_line.c ****             command_flag = 0;
 110:Core/Src/command_line.c **** 
 111:Core/Src/command_line.c ****             LedColor = aqua;
 112:Core/Src/command_line.c ****             Set_Led_Color(LedColor,brightness);
 113:Core/Src/command_line.c **** 
 114:Core/Src/command_line.c ****       } else if(strcmp((const char*)command_fuchsia, (const char*)data_buffer) == 0){
 115:Core/Src/command_line.c **** 
 116:Core/Src/command_line.c ****             Print_To_Cli();
 117:Core/Src/command_line.c **** 
 118:Core/Src/command_line.c ****             HAL_UART_Transmit(&huart1,(uint8_t*)color_log,strlen(color_log),TX_DELAY); //transmit t
 119:Core/Src/command_line.c **** 		memset(color_log, 0, strlen(color_log)); // enpty the data buffer
 120:Core/Src/command_line.c ****             command_flag = 0;
 121:Core/Src/command_line.c **** 
 122:Core/Src/command_line.c ****             LedColor = fuchsia;
 123:Core/Src/command_line.c ****             Set_Led_Color(LedColor,brightness);
 124:Core/Src/command_line.c **** 
 125:Core/Src/command_line.c ****       } else if(strcmp((const char*)command_br0, (const char*)data_buffer) == 0){
 126:Core/Src/command_line.c **** 
 127:Core/Src/command_line.c ****             Print_To_Cli();
 128:Core/Src/command_line.c **** 
 129:Core/Src/command_line.c ****             HAL_UART_Transmit(&huart1,(uint8_t*)color_log,strlen(color_log),TX_DELAY); //transmit t
 130:Core/Src/command_line.c **** 		memset(color_log, 0, strlen(color_log)); // enpty the data buffer
 131:Core/Src/command_line.c ****             command_flag = 0;
 132:Core/Src/command_line.c ****             brightness = 16;
 133:Core/Src/command_line.c ****             Set_Led_Color(LedColor,brightness);
 134:Core/Src/command_line.c **** 
 135:Core/Src/command_line.c ****       } else if(strcmp((const char*)command_br1, (const char*)data_buffer) == 0){
 136:Core/Src/command_line.c **** 
 137:Core/Src/command_line.c ****             Print_To_Cli();
 138:Core/Src/command_line.c **** 
 139:Core/Src/command_line.c ****             HAL_UART_Transmit(&huart1,(uint8_t*)color_log,strlen(color_log),TX_DELAY); //transmit t
 140:Core/Src/command_line.c **** 		memset(color_log, 0, strlen(color_log)); // enpty the data buffer
 141:Core/Src/command_line.c ****             command_flag = 0;
 142:Core/Src/command_line.c ****             brightness = 96;
 143:Core/Src/command_line.c ****             Set_Led_Color(LedColor,brightness);
 144:Core/Src/command_line.c **** 
 145:Core/Src/command_line.c ****       } else if(strcmp((const char*)command_br2, (const char*)data_buffer) == 0){
 146:Core/Src/command_line.c **** 
ARM GAS  /tmp/ccEvSrmF.s 			page 4


 147:Core/Src/command_line.c ****             Print_To_Cli();
 148:Core/Src/command_line.c **** 
 149:Core/Src/command_line.c ****             HAL_UART_Transmit(&huart1,(uint8_t*)color_log,strlen(color_log),TX_DELAY); //transmit t
 150:Core/Src/command_line.c **** 		memset(color_log, 0, strlen(color_log)); // enpty the data buffer
 151:Core/Src/command_line.c ****             command_flag = 0;
 152:Core/Src/command_line.c ****             brightness = 160;
 153:Core/Src/command_line.c ****             Set_Led_Color(LedColor,brightness);
 154:Core/Src/command_line.c **** 
 155:Core/Src/command_line.c ****       } else if(strcmp((const char*)command_br3, (const char*)data_buffer) == 0){
 156:Core/Src/command_line.c **** 
 157:Core/Src/command_line.c ****             Print_To_Cli();
 158:Core/Src/command_line.c **** 
 159:Core/Src/command_line.c ****             HAL_UART_Transmit(&huart1,(uint8_t*)color_log,strlen(color_log),TX_DELAY); //transmit t
 160:Core/Src/command_line.c **** 		memset(color_log, 0, strlen(color_log)); // enpty the data buffer
 161:Core/Src/command_line.c ****             command_flag = 0;
 162:Core/Src/command_line.c ****             brightness = 255;
 163:Core/Src/command_line.c ****             Set_Led_Color(LedColor,brightness);
 164:Core/Src/command_line.c **** 
 165:Core/Src/command_line.c ****       } else {
 166:Core/Src/command_line.c ****             
 167:Core/Src/command_line.c ****             Print_To_Cli();
 168:Core/Src/command_line.c **** 
 169:Core/Src/command_line.c ****             HAL_UART_Transmit(&huart1,(uint8_t*)error_command,strlen(error_command),TX_DELAY); //tr
 170:Core/Src/command_line.c **** 		memset(error_command, 0, strlen(error_command)); // enpty the data buffer
 171:Core/Src/command_line.c ****             command_flag = 0;
 172:Core/Src/command_line.c **** 
 173:Core/Src/command_line.c ****       }
 174:Core/Src/command_line.c **** }
 175:Core/Src/command_line.c **** 
 176:Core/Src/command_line.c **** void Print_To_Cli(){
  27              		.loc 1 176 20 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 10B5     		push	{r4, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 4, -8
  35              		.cfi_offset 14, -4
 177:Core/Src/command_line.c ****   //data_buffer[count++]='\r';
 178:Core/Src/command_line.c ****   //data_buffer[count++]='\n';
 179:Core/Src/command_line.c ****   //HAL_UART_Transmit(&huart1,data_buffer,count,TX_DELAY); //transmit the full sentence again
 180:Core/Src/command_line.c ****   memset(data_buffer, 0, count); // enpty the data buffer
  36              		.loc 1 180 3 view .LVU1
  37 0002 044C     		ldr	r4, .L3
  38 0004 2268     		ldr	r2, [r4]
  39 0006 0021     		movs	r1, #0
  40 0008 0348     		ldr	r0, .L3+4
  41 000a FFF7FEFF 		bl	memset
  42              	.LVL0:
 181:Core/Src/command_line.c ****   count = 0;
  43              		.loc 1 181 3 view .LVU2
  44              		.loc 1 181 9 is_stmt 0 view .LVU3
  45 000e 0023     		movs	r3, #0
  46 0010 2360     		str	r3, [r4]
 182:Core/Src/command_line.c **** }...
  47              		.loc 1 182 1 view .LVU4
ARM GAS  /tmp/ccEvSrmF.s 			page 5


  48 0012 10BD     		pop	{r4, pc}
  49              	.L4:
  50              		.align	2
  51              	.L3:
  52 0014 00000000 		.word	count
  53 0018 00000000 		.word	data_buffer
  54              		.cfi_endproc
  55              	.LFE73:
  57              		.section	.text.Get_Command,"ax",%progbits
  58              		.align	1
  59              		.global	Get_Command
  60              		.syntax unified
  61              		.thumb
  62              		.thumb_func
  63              		.fpu softvfp
  65              	Get_Command:
  66              	.LVL1:
  67              	.LFB72:
  34:Core/Src/command_line.c **** void Get_Command(uint8_t data_buffer[]){
  68              		.loc 1 34 40 is_stmt 1 view -0
  69              		.cfi_startproc
  70              		@ args = 0, pretend = 0, frame = 0
  71              		@ frame_needed = 0, uses_anonymous_args = 0
  34:Core/Src/command_line.c **** void Get_Command(uint8_t data_buffer[]){
  72              		.loc 1 34 40 is_stmt 0 view .LVU6
  73 0000 10B5     		push	{r4, lr}
  74              	.LCFI1:
  75              		.cfi_def_cfa_offset 8
  76              		.cfi_offset 4, -8
  77              		.cfi_offset 14, -4
  78 0002 0446     		mov	r4, r0
  35:Core/Src/command_line.c ****     char *error_command = "command not found\r\n";
  79              		.loc 1 35 5 is_stmt 1 view .LVU7
  80              	.LVL2:
  36:Core/Src/command_line.c ****     char *color_log = "color found\r\n";
  81              		.loc 1 36 5 view .LVU8
  37:Core/Src/command_line.c ****       if (strcmp((const char*)command_black, (const char*)data_buffer) == 0){
  82              		.loc 1 37 7 view .LVU9
  37:Core/Src/command_line.c ****       if (strcmp((const char*)command_black, (const char*)data_buffer) == 0){
  83              		.loc 1 37 11 is_stmt 0 view .LVU10
  84 0004 0146     		mov	r1, r0
  85 0006 B148     		ldr	r0, .L31
  86              	.LVL3:
  37:Core/Src/command_line.c ****       if (strcmp((const char*)command_black, (const char*)data_buffer) == 0){
  87              		.loc 1 37 11 view .LVU11
  88 0008 FFF7FEFF 		bl	strcmp
  89              	.LVL4:
  37:Core/Src/command_line.c ****       if (strcmp((const char*)command_black, (const char*)data_buffer) == 0){
  90              		.loc 1 37 10 view .LVU12
  91 000c 0028     		cmp	r0, #0
  92 000e 64D0     		beq	.L20
  48:Core/Src/command_line.c ****       } else if(strcmp((const char*)command_white, (const char*)data_buffer) == 0){
  93              		.loc 1 48 14 is_stmt 1 view .LVU13
  48:Core/Src/command_line.c ****       } else if(strcmp((const char*)command_white, (const char*)data_buffer) == 0){
  94              		.loc 1 48 17 is_stmt 0 view .LVU14
  95 0010 2146     		mov	r1, r4
  96 0012 AF48     		ldr	r0, .L31+4
ARM GAS  /tmp/ccEvSrmF.s 			page 6


  97 0014 FFF7FEFF 		bl	strcmp
  98              	.LVL5:
  48:Core/Src/command_line.c ****       } else if(strcmp((const char*)command_white, (const char*)data_buffer) == 0){
  99              		.loc 1 48 16 view .LVU15
 100 0018 0028     		cmp	r0, #0
 101 001a 76D0     		beq	.L21
  59:Core/Src/command_line.c ****       } else if(strcmp((const char*)command_red, (const char*)data_buffer) == 0){
 102              		.loc 1 59 14 is_stmt 1 view .LVU16
  59:Core/Src/command_line.c ****       } else if(strcmp((const char*)command_red, (const char*)data_buffer) == 0){
 103              		.loc 1 59 17 is_stmt 0 view .LVU17
 104 001c 2146     		mov	r1, r4
 105 001e AD48     		ldr	r0, .L31+8
 106 0020 FFF7FEFF 		bl	strcmp
 107              	.LVL6:
  59:Core/Src/command_line.c ****       } else if(strcmp((const char*)command_red, (const char*)data_buffer) == 0){
 108              		.loc 1 59 16 view .LVU18
 109 0024 0028     		cmp	r0, #0
 110 0026 00F08980 		beq	.L22
  70:Core/Src/command_line.c ****       } else if(strcmp((const char*)command_green, (const char*)data_buffer) == 0){
 111              		.loc 1 70 14 is_stmt 1 view .LVU19
  70:Core/Src/command_line.c ****       } else if(strcmp((const char*)command_green, (const char*)data_buffer) == 0){
 112              		.loc 1 70 17 is_stmt 0 view .LVU20
 113 002a 2146     		mov	r1, r4
 114 002c AA48     		ldr	r0, .L31+12
 115 002e FFF7FEFF 		bl	strcmp
 116              	.LVL7:
  70:Core/Src/command_line.c ****       } else if(strcmp((const char*)command_green, (const char*)data_buffer) == 0){
 117              		.loc 1 70 16 view .LVU21
 118 0032 0028     		cmp	r0, #0
 119 0034 00F09B80 		beq	.L23
  81:Core/Src/command_line.c ****       } else if(strcmp((const char*)command_blue, (const char*)data_buffer) == 0){
 120              		.loc 1 81 14 is_stmt 1 view .LVU22
  81:Core/Src/command_line.c ****       } else if(strcmp((const char*)command_blue, (const char*)data_buffer) == 0){
 121              		.loc 1 81 17 is_stmt 0 view .LVU23
 122 0038 2146     		mov	r1, r4
 123 003a A848     		ldr	r0, .L31+16
 124 003c FFF7FEFF 		bl	strcmp
 125              	.LVL8:
  81:Core/Src/command_line.c ****       } else if(strcmp((const char*)command_blue, (const char*)data_buffer) == 0){
 126              		.loc 1 81 16 view .LVU24
 127 0040 0028     		cmp	r0, #0
 128 0042 00F0AD80 		beq	.L24
  92:Core/Src/command_line.c ****       } else if(strcmp((const char*)command_yellow, (const char*)data_buffer) == 0){
 129              		.loc 1 92 14 is_stmt 1 view .LVU25
  92:Core/Src/command_line.c ****       } else if(strcmp((const char*)command_yellow, (const char*)data_buffer) == 0){
 130              		.loc 1 92 17 is_stmt 0 view .LVU26
 131 0046 2146     		mov	r1, r4
 132 0048 A548     		ldr	r0, .L31+20
 133 004a FFF7FEFF 		bl	strcmp
 134              	.LVL9:
  92:Core/Src/command_line.c ****       } else if(strcmp((const char*)command_yellow, (const char*)data_buffer) == 0){
 135              		.loc 1 92 16 view .LVU27
 136 004e 0028     		cmp	r0, #0
 137 0050 00F0BF80 		beq	.L25
 103:Core/Src/command_line.c ****       } else if(strcmp((const char*)command_aqua, (const char*)data_buffer) == 0){
 138              		.loc 1 103 14 is_stmt 1 view .LVU28
 103:Core/Src/command_line.c ****       } else if(strcmp((const char*)command_aqua, (const char*)data_buffer) == 0){
ARM GAS  /tmp/ccEvSrmF.s 			page 7


 139              		.loc 1 103 17 is_stmt 0 view .LVU29
 140 0054 2146     		mov	r1, r4
 141 0056 A348     		ldr	r0, .L31+24
 142 0058 FFF7FEFF 		bl	strcmp
 143              	.LVL10:
 103:Core/Src/command_line.c ****       } else if(strcmp((const char*)command_aqua, (const char*)data_buffer) == 0){
 144              		.loc 1 103 16 view .LVU30
 145 005c 0028     		cmp	r0, #0
 146 005e 00F0D180 		beq	.L26
 114:Core/Src/command_line.c ****       } else if(strcmp((const char*)command_fuchsia, (const char*)data_buffer) == 0){
 147              		.loc 1 114 14 is_stmt 1 view .LVU31
 114:Core/Src/command_line.c ****       } else if(strcmp((const char*)command_fuchsia, (const char*)data_buffer) == 0){
 148              		.loc 1 114 17 is_stmt 0 view .LVU32
 149 0062 2146     		mov	r1, r4
 150 0064 A048     		ldr	r0, .L31+28
 151 0066 FFF7FEFF 		bl	strcmp
 152              	.LVL11:
 114:Core/Src/command_line.c ****       } else if(strcmp((const char*)command_fuchsia, (const char*)data_buffer) == 0){
 153              		.loc 1 114 16 view .LVU33
 154 006a 0028     		cmp	r0, #0
 155 006c 00F0E380 		beq	.L27
 125:Core/Src/command_line.c ****       } else if(strcmp((const char*)command_br0, (const char*)data_buffer) == 0){
 156              		.loc 1 125 14 is_stmt 1 view .LVU34
 125:Core/Src/command_line.c ****       } else if(strcmp((const char*)command_br0, (const char*)data_buffer) == 0){
 157              		.loc 1 125 17 is_stmt 0 view .LVU35
 158 0070 2146     		mov	r1, r4
 159 0072 9E48     		ldr	r0, .L31+32
 160 0074 FFF7FEFF 		bl	strcmp
 161              	.LVL12:
 125:Core/Src/command_line.c ****       } else if(strcmp((const char*)command_br0, (const char*)data_buffer) == 0){
 162              		.loc 1 125 16 view .LVU36
 163 0078 0028     		cmp	r0, #0
 164 007a 00F0F580 		beq	.L28
 135:Core/Src/command_line.c ****       } else if(strcmp((const char*)command_br1, (const char*)data_buffer) == 0){
 165              		.loc 1 135 14 is_stmt 1 view .LVU37
 135:Core/Src/command_line.c ****       } else if(strcmp((const char*)command_br1, (const char*)data_buffer) == 0){
 166              		.loc 1 135 17 is_stmt 0 view .LVU38
 167 007e 2146     		mov	r1, r4
 168 0080 9B48     		ldr	r0, .L31+36
 169 0082 FFF7FEFF 		bl	strcmp
 170              	.LVL13:
 135:Core/Src/command_line.c ****       } else if(strcmp((const char*)command_br1, (const char*)data_buffer) == 0){
 171              		.loc 1 135 16 view .LVU39
 172 0086 0028     		cmp	r0, #0
 173 0088 00F00781 		beq	.L29
 145:Core/Src/command_line.c ****       } else if(strcmp((const char*)command_br2, (const char*)data_buffer) == 0){
 174              		.loc 1 145 14 is_stmt 1 view .LVU40
 145:Core/Src/command_line.c ****       } else if(strcmp((const char*)command_br2, (const char*)data_buffer) == 0){
 175              		.loc 1 145 17 is_stmt 0 view .LVU41
 176 008c 2146     		mov	r1, r4
 177 008e 9948     		ldr	r0, .L31+40
 178 0090 FFF7FEFF 		bl	strcmp
 179              	.LVL14:
 145:Core/Src/command_line.c ****       } else if(strcmp((const char*)command_br2, (const char*)data_buffer) == 0){
 180              		.loc 1 145 16 view .LVU42
 181 0094 0028     		cmp	r0, #0
 182 0096 00F03B81 		beq	.L30
ARM GAS  /tmp/ccEvSrmF.s 			page 8


 155:Core/Src/command_line.c ****       } else if(strcmp((const char*)command_br3, (const char*)data_buffer) == 0){
 183              		.loc 1 155 14 is_stmt 1 view .LVU43
 155:Core/Src/command_line.c ****       } else if(strcmp((const char*)command_br3, (const char*)data_buffer) == 0){
 184              		.loc 1 155 17 is_stmt 0 view .LVU44
 185 009a 2146     		mov	r1, r4
 186 009c 9648     		ldr	r0, .L31+44
 187 009e FFF7FEFF 		bl	strcmp
 188              	.LVL15:
 155:Core/Src/command_line.c ****       } else if(strcmp((const char*)command_br3, (const char*)data_buffer) == 0){
 189              		.loc 1 155 16 view .LVU45
 190 00a2 0028     		cmp	r0, #0
 191 00a4 40F04D81 		bne	.L18
 157:Core/Src/command_line.c ****             Print_To_Cli();
 192              		.loc 1 157 13 is_stmt 1 view .LVU46
 193 00a8 FFF7FEFF 		bl	Print_To_Cli
 194              	.LVL16:
 159:Core/Src/command_line.c ****             HAL_UART_Transmit(&huart1,(uint8_t*)color_log,strlen(color_log),TX_DELAY); //transmit t
 195              		.loc 1 159 13 view .LVU47
 196 00ac 934C     		ldr	r4, .L31+48
 197              	.LVL17:
 159:Core/Src/command_line.c ****             HAL_UART_Transmit(&huart1,(uint8_t*)color_log,strlen(color_log),TX_DELAY); //transmit t
 198              		.loc 1 159 13 is_stmt 0 view .LVU48
 199 00ae 4FF47A73 		mov	r3, #1000
 200 00b2 0D22     		movs	r2, #13
 201 00b4 2146     		mov	r1, r4
 202 00b6 9248     		ldr	r0, .L31+52
 203 00b8 FFF7FEFF 		bl	HAL_UART_Transmit
 204              	.LVL18:
 160:Core/Src/command_line.c **** 		memset(color_log, 0, strlen(color_log)); // enpty the data buffer
 205              		.loc 1 160 3 is_stmt 1 view .LVU49
 206 00bc 0023     		movs	r3, #0
 207 00be 2360     		str	r3, [r4]
 208 00c0 6360     		str	r3, [r4, #4]
 209 00c2 A360     		str	r3, [r4, #8]
 210 00c4 2373     		strb	r3, [r4, #12]
 161:Core/Src/command_line.c ****             command_flag = 0;
 211              		.loc 1 161 13 view .LVU50
 161:Core/Src/command_line.c ****             command_flag = 0;
 212              		.loc 1 161 26 is_stmt 0 view .LVU51
 213 00c6 8F4A     		ldr	r2, .L31+56
 214 00c8 1370     		strb	r3, [r2]
 162:Core/Src/command_line.c ****             brightness = 255;
 215              		.loc 1 162 13 is_stmt 1 view .LVU52
 162:Core/Src/command_line.c ****             brightness = 255;
 216              		.loc 1 162 24 is_stmt 0 view .LVU53
 217 00ca FF21     		movs	r1, #255
 218 00cc 8E4B     		ldr	r3, .L31+60
 219 00ce 1970     		strb	r1, [r3]
 163:Core/Src/command_line.c ****             Set_Led_Color(LedColor,brightness);
 220              		.loc 1 163 13 is_stmt 1 view .LVU54
 221 00d0 8E4B     		ldr	r3, .L31+64
 222 00d2 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 223 00d4 FFF7FEFF 		bl	Set_Led_Color
 224              	.LVL19:
 225 00d8 16E0     		b	.L5
 226              	.LVL20:
 227              	.L20:
ARM GAS  /tmp/ccEvSrmF.s 			page 9


  39:Core/Src/command_line.c ****             Print_To_Cli();
 228              		.loc 1 39 13 view .LVU55
 229 00da FFF7FEFF 		bl	Print_To_Cli
 230              	.LVL21:
  41:Core/Src/command_line.c ****             HAL_UART_Transmit(&huart1,(uint8_t*)color_log,strlen(color_log),TX_DELAY); //transmit t
 231              		.loc 1 41 13 view .LVU56
 232 00de 874C     		ldr	r4, .L31+48
 233              	.LVL22:
  41:Core/Src/command_line.c ****             HAL_UART_Transmit(&huart1,(uint8_t*)color_log,strlen(color_log),TX_DELAY); //transmit t
 234              		.loc 1 41 13 is_stmt 0 view .LVU57
 235 00e0 4FF47A73 		mov	r3, #1000
 236 00e4 0D22     		movs	r2, #13
 237 00e6 2146     		mov	r1, r4
 238 00e8 8548     		ldr	r0, .L31+52
 239 00ea FFF7FEFF 		bl	HAL_UART_Transmit
 240              	.LVL23:
  42:Core/Src/command_line.c **** 		memset(color_log, 0, strlen(color_log)); // enpty the data buffer
 241              		.loc 1 42 3 is_stmt 1 view .LVU58
 242 00ee 0020     		movs	r0, #0
 243 00f0 2060     		str	r0, [r4]
 244 00f2 6060     		str	r0, [r4, #4]
 245 00f4 A060     		str	r0, [r4, #8]
 246 00f6 2073     		strb	r0, [r4, #12]
  43:Core/Src/command_line.c ****             command_flag = 0;
 247              		.loc 1 43 13 view .LVU59
  43:Core/Src/command_line.c ****             command_flag = 0;
 248              		.loc 1 43 26 is_stmt 0 view .LVU60
 249 00f8 824B     		ldr	r3, .L31+56
 250 00fa 1870     		strb	r0, [r3]
  45:Core/Src/command_line.c ****             LedColor = black;
 251              		.loc 1 45 13 is_stmt 1 view .LVU61
  45:Core/Src/command_line.c ****             LedColor = black;
 252              		.loc 1 45 22 is_stmt 0 view .LVU62
 253 00fc 834B     		ldr	r3, .L31+64
 254 00fe 1870     		strb	r0, [r3]
  46:Core/Src/command_line.c ****             Set_Led_Color(LedColor,brightness);
 255              		.loc 1 46 13 is_stmt 1 view .LVU63
 256 0100 814B     		ldr	r3, .L31+60
 257 0102 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 258 0104 FFF7FEFF 		bl	Set_Led_Color
 259              	.LVL24:
 260              	.L5:
 174:Core/Src/command_line.c **** }
 261              		.loc 1 174 1 is_stmt 0 view .LVU64
 262 0108 10BD     		pop	{r4, pc}
 263              	.LVL25:
 264              	.L21:
  50:Core/Src/command_line.c ****             Print_To_Cli();
 265              		.loc 1 50 13 is_stmt 1 view .LVU65
 266 010a FFF7FEFF 		bl	Print_To_Cli
 267              	.LVL26:
  52:Core/Src/command_line.c ****             HAL_UART_Transmit(&huart1,(uint8_t*)color_log,strlen(color_log),TX_DELAY); //transmit t
 268              		.loc 1 52 13 view .LVU66
 269 010e 7B4C     		ldr	r4, .L31+48
 270              	.LVL27:
  52:Core/Src/command_line.c ****             HAL_UART_Transmit(&huart1,(uint8_t*)color_log,strlen(color_log),TX_DELAY); //transmit t
 271              		.loc 1 52 13 is_stmt 0 view .LVU67
ARM GAS  /tmp/ccEvSrmF.s 			page 10


 272 0110 4FF47A73 		mov	r3, #1000
 273 0114 0D22     		movs	r2, #13
 274 0116 2146     		mov	r1, r4
 275 0118 7948     		ldr	r0, .L31+52
 276 011a FFF7FEFF 		bl	HAL_UART_Transmit
 277              	.LVL28:
  53:Core/Src/command_line.c **** 		memset(color_log, 0, strlen(color_log)); // enpty the data buffer
 278              		.loc 1 53 3 is_stmt 1 view .LVU68
 279 011e 0023     		movs	r3, #0
 280 0120 2360     		str	r3, [r4]
 281 0122 6360     		str	r3, [r4, #4]
 282 0124 A360     		str	r3, [r4, #8]
 283 0126 2373     		strb	r3, [r4, #12]
  54:Core/Src/command_line.c ****             command_flag = 0;
 284              		.loc 1 54 13 view .LVU69
  54:Core/Src/command_line.c ****             command_flag = 0;
 285              		.loc 1 54 26 is_stmt 0 view .LVU70
 286 0128 764A     		ldr	r2, .L31+56
 287 012a 1370     		strb	r3, [r2]
  56:Core/Src/command_line.c ****             LedColor = white;
 288              		.loc 1 56 13 is_stmt 1 view .LVU71
  56:Core/Src/command_line.c ****             LedColor = white;
 289              		.loc 1 56 22 is_stmt 0 view .LVU72
 290 012c 0120     		movs	r0, #1
 291 012e 774B     		ldr	r3, .L31+64
 292 0130 1870     		strb	r0, [r3]
  57:Core/Src/command_line.c ****             Set_Led_Color(LedColor,brightness);
 293              		.loc 1 57 13 is_stmt 1 view .LVU73
 294 0132 754B     		ldr	r3, .L31+60
 295 0134 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 296 0136 FFF7FEFF 		bl	Set_Led_Color
 297              	.LVL29:
 298 013a E5E7     		b	.L5
 299              	.LVL30:
 300              	.L22:
  61:Core/Src/command_line.c ****             Print_To_Cli();
 301              		.loc 1 61 13 view .LVU74
 302 013c FFF7FEFF 		bl	Print_To_Cli
 303              	.LVL31:
  63:Core/Src/command_line.c ****             HAL_UART_Transmit(&huart1,(uint8_t*)color_log,strlen(color_log),TX_DELAY); //transmit t
 304              		.loc 1 63 13 view .LVU75
 305 0140 6E4C     		ldr	r4, .L31+48
 306              	.LVL32:
  63:Core/Src/command_line.c ****             HAL_UART_Transmit(&huart1,(uint8_t*)color_log,strlen(color_log),TX_DELAY); //transmit t
 307              		.loc 1 63 13 is_stmt 0 view .LVU76
 308 0142 4FF47A73 		mov	r3, #1000
 309 0146 0D22     		movs	r2, #13
 310 0148 2146     		mov	r1, r4
 311 014a 6D48     		ldr	r0, .L31+52
 312 014c FFF7FEFF 		bl	HAL_UART_Transmit
 313              	.LVL33:
  64:Core/Src/command_line.c **** 		memset(color_log, 0, strlen(color_log)); // enpty the data buffer
 314              		.loc 1 64 3 is_stmt 1 view .LVU77
 315 0150 0023     		movs	r3, #0
 316 0152 2360     		str	r3, [r4]
 317 0154 6360     		str	r3, [r4, #4]
 318 0156 A360     		str	r3, [r4, #8]
ARM GAS  /tmp/ccEvSrmF.s 			page 11


 319 0158 2373     		strb	r3, [r4, #12]
  65:Core/Src/command_line.c ****             command_flag = 0;
 320              		.loc 1 65 13 view .LVU78
  65:Core/Src/command_line.c ****             command_flag = 0;
 321              		.loc 1 65 26 is_stmt 0 view .LVU79
 322 015a 6A4A     		ldr	r2, .L31+56
 323 015c 1370     		strb	r3, [r2]
  67:Core/Src/command_line.c ****             LedColor = red;
 324              		.loc 1 67 13 is_stmt 1 view .LVU80
  67:Core/Src/command_line.c ****             LedColor = red;
 325              		.loc 1 67 22 is_stmt 0 view .LVU81
 326 015e 0220     		movs	r0, #2
 327 0160 6A4B     		ldr	r3, .L31+64
 328 0162 1870     		strb	r0, [r3]
  68:Core/Src/command_line.c ****             Set_Led_Color(LedColor,brightness);
 329              		.loc 1 68 13 is_stmt 1 view .LVU82
 330 0164 684B     		ldr	r3, .L31+60
 331 0166 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 332 0168 FFF7FEFF 		bl	Set_Led_Color
 333              	.LVL34:
 334 016c CCE7     		b	.L5
 335              	.LVL35:
 336              	.L23:
  72:Core/Src/command_line.c ****             Print_To_Cli();
 337              		.loc 1 72 13 view .LVU83
 338 016e FFF7FEFF 		bl	Print_To_Cli
 339              	.LVL36:
  74:Core/Src/command_line.c ****             HAL_UART_Transmit(&huart1,(uint8_t*)color_log,strlen(color_log),TX_DELAY); //transmit t
 340              		.loc 1 74 13 view .LVU84
 341 0172 624C     		ldr	r4, .L31+48
 342              	.LVL37:
  74:Core/Src/command_line.c ****             HAL_UART_Transmit(&huart1,(uint8_t*)color_log,strlen(color_log),TX_DELAY); //transmit t
 343              		.loc 1 74 13 is_stmt 0 view .LVU85
 344 0174 4FF47A73 		mov	r3, #1000
 345 0178 0D22     		movs	r2, #13
 346 017a 2146     		mov	r1, r4
 347 017c 6048     		ldr	r0, .L31+52
 348 017e FFF7FEFF 		bl	HAL_UART_Transmit
 349              	.LVL38:
  75:Core/Src/command_line.c **** 		memset(color_log, 0, strlen(color_log)); // enpty the data buffer
 350              		.loc 1 75 3 is_stmt 1 view .LVU86
 351 0182 0023     		movs	r3, #0
 352 0184 2360     		str	r3, [r4]
 353 0186 6360     		str	r3, [r4, #4]
 354 0188 A360     		str	r3, [r4, #8]
 355 018a 2373     		strb	r3, [r4, #12]
  76:Core/Src/command_line.c ****             command_flag = 0;
 356              		.loc 1 76 13 view .LVU87
  76:Core/Src/command_line.c ****             command_flag = 0;
 357              		.loc 1 76 26 is_stmt 0 view .LVU88
 358 018c 5D4A     		ldr	r2, .L31+56
 359 018e 1370     		strb	r3, [r2]
  78:Core/Src/command_line.c ****             LedColor = green;
 360              		.loc 1 78 13 is_stmt 1 view .LVU89
  78:Core/Src/command_line.c ****             LedColor = green;
 361              		.loc 1 78 22 is_stmt 0 view .LVU90
 362 0190 0320     		movs	r0, #3
ARM GAS  /tmp/ccEvSrmF.s 			page 12


 363 0192 5E4B     		ldr	r3, .L31+64
 364 0194 1870     		strb	r0, [r3]
  79:Core/Src/command_line.c ****             Set_Led_Color(LedColor,brightness);
 365              		.loc 1 79 13 is_stmt 1 view .LVU91
 366 0196 5C4B     		ldr	r3, .L31+60
 367 0198 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 368 019a FFF7FEFF 		bl	Set_Led_Color
 369              	.LVL39:
 370 019e B3E7     		b	.L5
 371              	.LVL40:
 372              	.L24:
  83:Core/Src/command_line.c ****             Print_To_Cli();
 373              		.loc 1 83 13 view .LVU92
 374 01a0 FFF7FEFF 		bl	Print_To_Cli
 375              	.LVL41:
  85:Core/Src/command_line.c ****             HAL_UART_Transmit(&huart1,(uint8_t*)color_log,strlen(color_log),TX_DELAY); //transmit t
 376              		.loc 1 85 13 view .LVU93
 377 01a4 554C     		ldr	r4, .L31+48
 378              	.LVL42:
  85:Core/Src/command_line.c ****             HAL_UART_Transmit(&huart1,(uint8_t*)color_log,strlen(color_log),TX_DELAY); //transmit t
 379              		.loc 1 85 13 is_stmt 0 view .LVU94
 380 01a6 4FF47A73 		mov	r3, #1000
 381 01aa 0D22     		movs	r2, #13
 382 01ac 2146     		mov	r1, r4
 383 01ae 5448     		ldr	r0, .L31+52
 384 01b0 FFF7FEFF 		bl	HAL_UART_Transmit
 385              	.LVL43:
  86:Core/Src/command_line.c **** 		memset(color_log, 0, strlen(color_log)); // enpty the data buffer
 386              		.loc 1 86 3 is_stmt 1 view .LVU95
 387 01b4 0023     		movs	r3, #0
 388 01b6 2360     		str	r3, [r4]
 389 01b8 6360     		str	r3, [r4, #4]
 390 01ba A360     		str	r3, [r4, #8]
 391 01bc 2373     		strb	r3, [r4, #12]
  87:Core/Src/command_line.c ****             command_flag = 0;
 392              		.loc 1 87 13 view .LVU96
  87:Core/Src/command_line.c ****             command_flag = 0;
 393              		.loc 1 87 26 is_stmt 0 view .LVU97
 394 01be 514A     		ldr	r2, .L31+56
 395 01c0 1370     		strb	r3, [r2]
  89:Core/Src/command_line.c ****             LedColor = blue;
 396              		.loc 1 89 13 is_stmt 1 view .LVU98
  89:Core/Src/command_line.c ****             LedColor = blue;
 397              		.loc 1 89 22 is_stmt 0 view .LVU99
 398 01c2 0420     		movs	r0, #4
 399 01c4 514B     		ldr	r3, .L31+64
 400 01c6 1870     		strb	r0, [r3]
  90:Core/Src/command_line.c ****             Set_Led_Color(LedColor,brightness);
 401              		.loc 1 90 13 is_stmt 1 view .LVU100
 402 01c8 4F4B     		ldr	r3, .L31+60
 403 01ca 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 404 01cc FFF7FEFF 		bl	Set_Led_Color
 405              	.LVL44:
 406 01d0 9AE7     		b	.L5
 407              	.LVL45:
 408              	.L25:
  94:Core/Src/command_line.c ****             Print_To_Cli();
ARM GAS  /tmp/ccEvSrmF.s 			page 13


 409              		.loc 1 94 13 view .LVU101
 410 01d2 FFF7FEFF 		bl	Print_To_Cli
 411              	.LVL46:
  96:Core/Src/command_line.c ****             HAL_UART_Transmit(&huart1,(uint8_t*)color_log,strlen(color_log),TX_DELAY); //transmit t
 412              		.loc 1 96 13 view .LVU102
 413 01d6 494C     		ldr	r4, .L31+48
 414              	.LVL47:
  96:Core/Src/command_line.c ****             HAL_UART_Transmit(&huart1,(uint8_t*)color_log,strlen(color_log),TX_DELAY); //transmit t
 415              		.loc 1 96 13 is_stmt 0 view .LVU103
 416 01d8 4FF47A73 		mov	r3, #1000
 417 01dc 0D22     		movs	r2, #13
 418 01de 2146     		mov	r1, r4
 419 01e0 4748     		ldr	r0, .L31+52
 420 01e2 FFF7FEFF 		bl	HAL_UART_Transmit
 421              	.LVL48:
  97:Core/Src/command_line.c **** 		memset(color_log, 0, strlen(color_log)); // enpty the data buffer
 422              		.loc 1 97 3 is_stmt 1 view .LVU104
 423 01e6 0023     		movs	r3, #0
 424 01e8 2360     		str	r3, [r4]
 425 01ea 6360     		str	r3, [r4, #4]
 426 01ec A360     		str	r3, [r4, #8]
 427 01ee 2373     		strb	r3, [r4, #12]
  98:Core/Src/command_line.c ****             command_flag = 0;
 428              		.loc 1 98 13 view .LVU105
  98:Core/Src/command_line.c ****             command_flag = 0;
 429              		.loc 1 98 26 is_stmt 0 view .LVU106
 430 01f0 444A     		ldr	r2, .L31+56
 431 01f2 1370     		strb	r3, [r2]
 100:Core/Src/command_line.c ****             LedColor = yellow;
 432              		.loc 1 100 13 is_stmt 1 view .LVU107
 100:Core/Src/command_line.c ****             LedColor = yellow;
 433              		.loc 1 100 22 is_stmt 0 view .LVU108
 434 01f4 0520     		movs	r0, #5
 435 01f6 454B     		ldr	r3, .L31+64
 436 01f8 1870     		strb	r0, [r3]
 101:Core/Src/command_line.c ****             Set_Led_Color(LedColor,brightness);
 437              		.loc 1 101 13 is_stmt 1 view .LVU109
 438 01fa 434B     		ldr	r3, .L31+60
 439 01fc 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 440 01fe FFF7FEFF 		bl	Set_Led_Color
 441              	.LVL49:
 442 0202 81E7     		b	.L5
 443              	.LVL50:
 444              	.L26:
 105:Core/Src/command_line.c ****             Print_To_Cli();
 445              		.loc 1 105 13 view .LVU110
 446 0204 FFF7FEFF 		bl	Print_To_Cli
 447              	.LVL51:
 107:Core/Src/command_line.c ****             HAL_UART_Transmit(&huart1,(uint8_t*)color_log,strlen(color_log),TX_DELAY); //transmit t
 448              		.loc 1 107 13 view .LVU111
 449 0208 3C4C     		ldr	r4, .L31+48
 450              	.LVL52:
 107:Core/Src/command_line.c ****             HAL_UART_Transmit(&huart1,(uint8_t*)color_log,strlen(color_log),TX_DELAY); //transmit t
 451              		.loc 1 107 13 is_stmt 0 view .LVU112
 452 020a 4FF47A73 		mov	r3, #1000
 453 020e 0D22     		movs	r2, #13
 454 0210 2146     		mov	r1, r4
ARM GAS  /tmp/ccEvSrmF.s 			page 14


 455 0212 3B48     		ldr	r0, .L31+52
 456 0214 FFF7FEFF 		bl	HAL_UART_Transmit
 457              	.LVL53:
 108:Core/Src/command_line.c **** 		memset(color_log, 0, strlen(color_log)); // enpty the data buffer
 458              		.loc 1 108 3 is_stmt 1 view .LVU113
 459 0218 0023     		movs	r3, #0
 460 021a 2360     		str	r3, [r4]
 461 021c 6360     		str	r3, [r4, #4]
 462 021e A360     		str	r3, [r4, #8]
 463 0220 2373     		strb	r3, [r4, #12]
 109:Core/Src/command_line.c ****             command_flag = 0;
 464              		.loc 1 109 13 view .LVU114
 109:Core/Src/command_line.c ****             command_flag = 0;
 465              		.loc 1 109 26 is_stmt 0 view .LVU115
 466 0222 384A     		ldr	r2, .L31+56
 467 0224 1370     		strb	r3, [r2]
 111:Core/Src/command_line.c ****             LedColor = aqua;
 468              		.loc 1 111 13 is_stmt 1 view .LVU116
 111:Core/Src/command_line.c ****             LedColor = aqua;
 469              		.loc 1 111 22 is_stmt 0 view .LVU117
 470 0226 0620     		movs	r0, #6
 471 0228 384B     		ldr	r3, .L31+64
 472 022a 1870     		strb	r0, [r3]
 112:Core/Src/command_line.c ****             Set_Led_Color(LedColor,brightness);
 473              		.loc 1 112 13 is_stmt 1 view .LVU118
 474 022c 364B     		ldr	r3, .L31+60
 475 022e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 476 0230 FFF7FEFF 		bl	Set_Led_Color
 477              	.LVL54:
 478 0234 68E7     		b	.L5
 479              	.LVL55:
 480              	.L27:
 116:Core/Src/command_line.c ****             Print_To_Cli();
 481              		.loc 1 116 13 view .LVU119
 482 0236 FFF7FEFF 		bl	Print_To_Cli
 483              	.LVL56:
 118:Core/Src/command_line.c ****             HAL_UART_Transmit(&huart1,(uint8_t*)color_log,strlen(color_log),TX_DELAY); //transmit t
 484              		.loc 1 118 13 view .LVU120
 485 023a 304C     		ldr	r4, .L31+48
 486              	.LVL57:
 118:Core/Src/command_line.c ****             HAL_UART_Transmit(&huart1,(uint8_t*)color_log,strlen(color_log),TX_DELAY); //transmit t
 487              		.loc 1 118 13 is_stmt 0 view .LVU121
 488 023c 4FF47A73 		mov	r3, #1000
 489 0240 0D22     		movs	r2, #13
 490 0242 2146     		mov	r1, r4
 491 0244 2E48     		ldr	r0, .L31+52
 492 0246 FFF7FEFF 		bl	HAL_UART_Transmit
 493              	.LVL58:
 119:Core/Src/command_line.c **** 		memset(color_log, 0, strlen(color_log)); // enpty the data buffer
 494              		.loc 1 119 3 is_stmt 1 view .LVU122
 495 024a 0023     		movs	r3, #0
 496 024c 2360     		str	r3, [r4]
 497 024e 6360     		str	r3, [r4, #4]
 498 0250 A360     		str	r3, [r4, #8]
 499 0252 2373     		strb	r3, [r4, #12]
 120:Core/Src/command_line.c ****             command_flag = 0;
 500              		.loc 1 120 13 view .LVU123
ARM GAS  /tmp/ccEvSrmF.s 			page 15


 120:Core/Src/command_line.c ****             command_flag = 0;
 501              		.loc 1 120 26 is_stmt 0 view .LVU124
 502 0254 2B4A     		ldr	r2, .L31+56
 503 0256 1370     		strb	r3, [r2]
 122:Core/Src/command_line.c ****             LedColor = fuchsia;
 504              		.loc 1 122 13 is_stmt 1 view .LVU125
 122:Core/Src/command_line.c ****             LedColor = fuchsia;
 505              		.loc 1 122 22 is_stmt 0 view .LVU126
 506 0258 0720     		movs	r0, #7
 507 025a 2C4B     		ldr	r3, .L31+64
 508 025c 1870     		strb	r0, [r3]
 123:Core/Src/command_line.c ****             Set_Led_Color(LedColor,brightness);
 509              		.loc 1 123 13 is_stmt 1 view .LVU127
 510 025e 2A4B     		ldr	r3, .L31+60
 511 0260 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 512 0262 FFF7FEFF 		bl	Set_Led_Color
 513              	.LVL59:
 514 0266 4FE7     		b	.L5
 515              	.LVL60:
 516              	.L28:
 127:Core/Src/command_line.c ****             Print_To_Cli();
 517              		.loc 1 127 13 view .LVU128
 518 0268 FFF7FEFF 		bl	Print_To_Cli
 519              	.LVL61:
 129:Core/Src/command_line.c ****             HAL_UART_Transmit(&huart1,(uint8_t*)color_log,strlen(color_log),TX_DELAY); //transmit t
 520              		.loc 1 129 13 view .LVU129
 521 026c 234C     		ldr	r4, .L31+48
 522              	.LVL62:
 129:Core/Src/command_line.c ****             HAL_UART_Transmit(&huart1,(uint8_t*)color_log,strlen(color_log),TX_DELAY); //transmit t
 523              		.loc 1 129 13 is_stmt 0 view .LVU130
 524 026e 4FF47A73 		mov	r3, #1000
 525 0272 0D22     		movs	r2, #13
 526 0274 2146     		mov	r1, r4
 527 0276 2248     		ldr	r0, .L31+52
 528 0278 FFF7FEFF 		bl	HAL_UART_Transmit
 529              	.LVL63:
 130:Core/Src/command_line.c **** 		memset(color_log, 0, strlen(color_log)); // enpty the data buffer
 530              		.loc 1 130 3 is_stmt 1 view .LVU131
 531 027c 0023     		movs	r3, #0
 532 027e 2360     		str	r3, [r4]
 533 0280 6360     		str	r3, [r4, #4]
 534 0282 A360     		str	r3, [r4, #8]
 535 0284 2373     		strb	r3, [r4, #12]
 131:Core/Src/command_line.c ****             command_flag = 0;
 536              		.loc 1 131 13 view .LVU132
 131:Core/Src/command_line.c ****             command_flag = 0;
 537              		.loc 1 131 26 is_stmt 0 view .LVU133
 538 0286 1F4A     		ldr	r2, .L31+56
 539 0288 1370     		strb	r3, [r2]
 132:Core/Src/command_line.c ****             brightness = 16;
 540              		.loc 1 132 13 is_stmt 1 view .LVU134
 132:Core/Src/command_line.c ****             brightness = 16;
 541              		.loc 1 132 24 is_stmt 0 view .LVU135
 542 028a 1021     		movs	r1, #16
 543 028c 1E4B     		ldr	r3, .L31+60
 544 028e 1970     		strb	r1, [r3]
 133:Core/Src/command_line.c ****             Set_Led_Color(LedColor,brightness);
ARM GAS  /tmp/ccEvSrmF.s 			page 16


 545              		.loc 1 133 13 is_stmt 1 view .LVU136
 546 0290 1E4B     		ldr	r3, .L31+64
 547 0292 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 548 0294 FFF7FEFF 		bl	Set_Led_Color
 549              	.LVL64:
 550 0298 36E7     		b	.L5
 551              	.LVL65:
 552              	.L29:
 137:Core/Src/command_line.c ****             Print_To_Cli();
 553              		.loc 1 137 13 view .LVU137
 554 029a FFF7FEFF 		bl	Print_To_Cli
 555              	.LVL66:
 139:Core/Src/command_line.c ****             HAL_UART_Transmit(&huart1,(uint8_t*)color_log,strlen(color_log),TX_DELAY); //transmit t
 556              		.loc 1 139 13 view .LVU138
 557 029e 174C     		ldr	r4, .L31+48
 558              	.LVL67:
 139:Core/Src/command_line.c ****             HAL_UART_Transmit(&huart1,(uint8_t*)color_log,strlen(color_log),TX_DELAY); //transmit t
 559              		.loc 1 139 13 is_stmt 0 view .LVU139
 560 02a0 4FF47A73 		mov	r3, #1000
 561 02a4 0D22     		movs	r2, #13
 562 02a6 2146     		mov	r1, r4
 563 02a8 1548     		ldr	r0, .L31+52
 564 02aa FFF7FEFF 		bl	HAL_UART_Transmit
 565              	.LVL68:
 140:Core/Src/command_line.c **** 		memset(color_log, 0, strlen(color_log)); // enpty the data buffer
 566              		.loc 1 140 3 is_stmt 1 view .LVU140
 567 02ae 0023     		movs	r3, #0
 568 02b0 2360     		str	r3, [r4]
 569 02b2 6360     		str	r3, [r4, #4]
 570 02b4 A360     		str	r3, [r4, #8]
 571 02b6 2373     		strb	r3, [r4, #12]
 141:Core/Src/command_line.c ****             command_flag = 0;
 572              		.loc 1 141 13 view .LVU141
 141:Core/Src/command_line.c ****             command_flag = 0;
 573              		.loc 1 141 26 is_stmt 0 view .LVU142
 574 02b8 124A     		ldr	r2, .L31+56
 575 02ba 1370     		strb	r3, [r2]
 142:Core/Src/command_line.c ****             brightness = 96;
 576              		.loc 1 142 13 is_stmt 1 view .LVU143
 142:Core/Src/command_line.c ****             brightness = 96;
 577              		.loc 1 142 24 is_stmt 0 view .LVU144
 578 02bc 6021     		movs	r1, #96
 579 02be 124B     		ldr	r3, .L31+60
 580 02c0 1970     		strb	r1, [r3]
 143:Core/Src/command_line.c ****             Set_Led_Color(LedColor,brightness);
 581              		.loc 1 143 13 is_stmt 1 view .LVU145
 582 02c2 124B     		ldr	r3, .L31+64
 583 02c4 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 584 02c6 FFF7FEFF 		bl	Set_Led_Color
 585              	.LVL69:
 586 02ca 1DE7     		b	.L5
 587              	.L32:
 588              		.align	2
 589              	.L31:
 590 02cc 00000000 		.word	.LANCHOR0
 591 02d0 00000000 		.word	.LANCHOR1
 592 02d4 00000000 		.word	.LANCHOR2
ARM GAS  /tmp/ccEvSrmF.s 			page 17


 593 02d8 00000000 		.word	.LANCHOR3
 594 02dc 00000000 		.word	.LANCHOR4
 595 02e0 00000000 		.word	.LANCHOR5
 596 02e4 00000000 		.word	.LANCHOR6
 597 02e8 00000000 		.word	.LANCHOR7
 598 02ec 00000000 		.word	.LANCHOR8
 599 02f0 00000000 		.word	.LANCHOR9
 600 02f4 00000000 		.word	.LANCHOR10
 601 02f8 00000000 		.word	.LANCHOR11
 602 02fc 00000000 		.word	.LC0
 603 0300 00000000 		.word	huart1
 604 0304 00000000 		.word	command_flag
 605 0308 00000000 		.word	brightness
 606 030c 00000000 		.word	LedColor
 607              	.LVL70:
 608              	.L30:
 147:Core/Src/command_line.c ****             Print_To_Cli();
 609              		.loc 1 147 13 view .LVU146
 610 0310 FFF7FEFF 		bl	Print_To_Cli
 611              	.LVL71:
 149:Core/Src/command_line.c ****             HAL_UART_Transmit(&huart1,(uint8_t*)color_log,strlen(color_log),TX_DELAY); //transmit t
 612              		.loc 1 149 13 view .LVU147
 613 0314 154C     		ldr	r4, .L33
 614              	.LVL72:
 149:Core/Src/command_line.c ****             HAL_UART_Transmit(&huart1,(uint8_t*)color_log,strlen(color_log),TX_DELAY); //transmit t
 615              		.loc 1 149 13 is_stmt 0 view .LVU148
 616 0316 4FF47A73 		mov	r3, #1000
 617 031a 0D22     		movs	r2, #13
 618 031c 2146     		mov	r1, r4
 619 031e 1448     		ldr	r0, .L33+4
 620 0320 FFF7FEFF 		bl	HAL_UART_Transmit
 621              	.LVL73:
 150:Core/Src/command_line.c **** 		memset(color_log, 0, strlen(color_log)); // enpty the data buffer
 622              		.loc 1 150 3 is_stmt 1 view .LVU149
 623 0324 0023     		movs	r3, #0
 624 0326 2360     		str	r3, [r4]
 625 0328 6360     		str	r3, [r4, #4]
 626 032a A360     		str	r3, [r4, #8]
 627 032c 2373     		strb	r3, [r4, #12]
 151:Core/Src/command_line.c ****             command_flag = 0;
 628              		.loc 1 151 13 view .LVU150
 151:Core/Src/command_line.c ****             command_flag = 0;
 629              		.loc 1 151 26 is_stmt 0 view .LVU151
 630 032e 114A     		ldr	r2, .L33+8
 631 0330 1370     		strb	r3, [r2]
 152:Core/Src/command_line.c ****             brightness = 160;
 632              		.loc 1 152 13 is_stmt 1 view .LVU152
 152:Core/Src/command_line.c ****             brightness = 160;
 633              		.loc 1 152 24 is_stmt 0 view .LVU153
 634 0332 A021     		movs	r1, #160
 635 0334 104B     		ldr	r3, .L33+12
 636 0336 1970     		strb	r1, [r3]
 153:Core/Src/command_line.c ****             Set_Led_Color(LedColor,brightness);
 637              		.loc 1 153 13 is_stmt 1 view .LVU154
 638 0338 104B     		ldr	r3, .L33+16
 639 033a 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 640 033c FFF7FEFF 		bl	Set_Led_Color
ARM GAS  /tmp/ccEvSrmF.s 			page 18


 641              	.LVL74:
 642 0340 E2E6     		b	.L5
 643              	.LVL75:
 644              	.L18:
 167:Core/Src/command_line.c ****             Print_To_Cli();
 645              		.loc 1 167 13 view .LVU155
 646 0342 FFF7FEFF 		bl	Print_To_Cli
 647              	.LVL76:
 169:Core/Src/command_line.c ****             HAL_UART_Transmit(&huart1,(uint8_t*)error_command,strlen(error_command),TX_DELAY); //tr
 648              		.loc 1 169 13 view .LVU156
 649 0346 0E4C     		ldr	r4, .L33+20
 650              	.LVL77:
 169:Core/Src/command_line.c ****             HAL_UART_Transmit(&huart1,(uint8_t*)error_command,strlen(error_command),TX_DELAY); //tr
 651              		.loc 1 169 13 is_stmt 0 view .LVU157
 652 0348 4FF47A73 		mov	r3, #1000
 653 034c 1322     		movs	r2, #19
 654 034e 2146     		mov	r1, r4
 655 0350 0748     		ldr	r0, .L33+4
 656 0352 FFF7FEFF 		bl	HAL_UART_Transmit
 657              	.LVL78:
 170:Core/Src/command_line.c **** 		memset(error_command, 0, strlen(error_command)); // enpty the data buffer
 658              		.loc 1 170 3 is_stmt 1 view .LVU158
 659 0356 0023     		movs	r3, #0
 660 0358 2360     		str	r3, [r4]
 661 035a 6360     		str	r3, [r4, #4]
 662 035c A360     		str	r3, [r4, #8]
 663 035e E360     		str	r3, [r4, #12]
 664 0360 C4F80F30 		str	r3, [r4, #15]	@ unaligned
 171:Core/Src/command_line.c ****             command_flag = 0;
 665              		.loc 1 171 13 view .LVU159
 171:Core/Src/command_line.c ****             command_flag = 0;
 666              		.loc 1 171 26 is_stmt 0 view .LVU160
 667 0364 034A     		ldr	r2, .L33+8
 668 0366 1370     		strb	r3, [r2]
 174:Core/Src/command_line.c **** }
 669              		.loc 1 174 1 view .LVU161
 670 0368 CEE6     		b	.L5
 671              	.L34:
 672 036a 00BF     		.align	2
 673              	.L33:
 674 036c 00000000 		.word	.LC0
 675 0370 00000000 		.word	huart1
 676 0374 00000000 		.word	command_flag
 677 0378 00000000 		.word	brightness
 678 037c 00000000 		.word	LedColor
 679 0380 10000000 		.word	.LC1
 680              		.cfi_endproc
 681              	.LFE72:
 683              		.global	command_br3
 684              		.global	command_br2
 685              		.global	command_br1
 686              		.global	command_br0
 687              		.global	command_fuchsia
 688              		.global	command_aqua
 689              		.global	command_yellow
 690              		.global	command_blue
 691              		.global	command_green
ARM GAS  /tmp/ccEvSrmF.s 			page 19


 692              		.global	command_red
 693              		.global	command_white
 694              		.global	command_black
 695              		.global	command_colors
 696              		.section	.data.command_aqua,"aw"
 697              		.align	2
 698              		.set	.LANCHOR6,. + 0
 701              	command_aqua:
 702 0000 61717561 		.ascii	"aqua\000"
 702      00
 703              		.section	.data.command_black,"aw"
 704              		.align	2
 705              		.set	.LANCHOR0,. + 0
 708              	command_black:
 709 0000 626C6163 		.ascii	"black\000"
 709      6B00
 710              		.section	.data.command_blue,"aw"
 711              		.align	2
 712              		.set	.LANCHOR4,. + 0
 715              	command_blue:
 716 0000 626C7565 		.ascii	"blue\000"
 716      00
 717              		.section	.data.command_br0,"aw"
 718              		.align	2
 719              		.set	.LANCHOR8,. + 0
 722              	command_br0:
 723 0000 62723000 		.ascii	"br0\000"
 724              		.section	.data.command_br1,"aw"
 725              		.align	2
 726              		.set	.LANCHOR9,. + 0
 729              	command_br1:
 730 0000 62723100 		.ascii	"br1\000"
 731              		.section	.data.command_br2,"aw"
 732              		.align	2
 733              		.set	.LANCHOR10,. + 0
 736              	command_br2:
 737 0000 62723200 		.ascii	"br2\000"
 738              		.section	.data.command_br3,"aw"
 739              		.align	2
 740              		.set	.LANCHOR11,. + 0
 743              	command_br3:
 744 0000 62723300 		.ascii	"br3\000"
 745              		.section	.data.command_colors,"aw"
 746              		.align	2
 749              	command_colors:
 750 0000 636F6C6F 		.ascii	"colors\000"
 750      727300
 751              		.section	.data.command_fuchsia,"aw"
 752              		.align	2
 753              		.set	.LANCHOR7,. + 0
 756              	command_fuchsia:
 757 0000 66756368 		.ascii	"fuchsia\000"
 757      73696100 
 758              		.section	.data.command_green,"aw"
 759              		.align	2
 760              		.set	.LANCHOR3,. + 0
 763              	command_green:
ARM GAS  /tmp/ccEvSrmF.s 			page 20


 764 0000 67726565 		.ascii	"green\000"
 764      6E00
 765              		.section	.data.command_red,"aw"
 766              		.align	2
 767              		.set	.LANCHOR2,. + 0
 770              	command_red:
 771 0000 72656400 		.ascii	"red\000"
 772              		.section	.data.command_white,"aw"
 773              		.align	2
 774              		.set	.LANCHOR1,. + 0
 777              	command_white:
 778 0000 77686974 		.ascii	"white\000"
 778      6500
 779              		.section	.data.command_yellow,"aw"
 780              		.align	2
 781              		.set	.LANCHOR5,. + 0
 784              	command_yellow:
 785 0000 79656C6C 		.ascii	"yellow\000"
 785      6F7700
 786              		.section	.rodata.Get_Command.str1.4,"aMS",%progbits,1
 787              		.align	2
 788              	.LC0:
 789 0000 636F6C6F 		.ascii	"color found\015\012\000"
 789      7220666F 
 789      756E640D 
 789      0A00
 790 000e 0000     		.space	2
 791              	.LC1:
 792 0010 636F6D6D 		.ascii	"command not found\015\012\000"
 792      616E6420 
 792      6E6F7420 
 792      666F756E 
 792      640D0A00 
 793              		.text
 794              	.Letext0:
 795              		.file 2 "/usr/lib/gcc/arm-none-eabi/8.3.1/include/stddef.h"
 796              		.file 3 "/usr/arm-none-eabi/include/machine/_default_types.h"
 797              		.file 4 "/usr/arm-none-eabi/include/sys/_types.h"
 798              		.file 5 "/usr/arm-none-eabi/include/sys/reent.h"
 799              		.file 6 "/usr/arm-none-eabi/include/sys/lock.h"
 800              		.file 7 "/usr/arm-none-eabi/include/sys/_stdint.h"
 801              		.file 8 "Drivers/CMSIS/Include/core_cm3.h"
 802              		.file 9 "Drivers/CMSIS/Device/ST/STM32F2xx/Include/system_stm32f2xx.h"
 803              		.file 10 "Drivers/CMSIS/Device/ST/STM32F2xx/Include/stm32f205xx.h"
 804              		.file 11 "Drivers/STM32F2xx_HAL_Driver/Inc/stm32f2xx_hal_def.h"
 805              		.file 12 "Drivers/STM32F2xx_HAL_Driver/Inc/stm32f2xx_hal_dma.h"
 806              		.file 13 "Drivers/STM32F2xx_HAL_Driver/Inc/stm32f2xx_hal_uart.h"
 807              		.file 14 "Drivers/STM32F2xx_HAL_Driver/Inc/stm32f2xx_hal.h"
 808              		.file 15 "Core/Inc/led_color.h"
 809              		.file 16 "/usr/arm-none-eabi/include/string.h"
 810              		.file 17 "<built-in>"
ARM GAS  /tmp/ccEvSrmF.s 			page 21


DEFINED SYMBOLS
                            *ABS*:0000000000000000 command_line.c
     /tmp/ccEvSrmF.s:16     .text.Print_To_Cli:0000000000000000 $t
     /tmp/ccEvSrmF.s:24     .text.Print_To_Cli:0000000000000000 Print_To_Cli
     /tmp/ccEvSrmF.s:52     .text.Print_To_Cli:0000000000000014 $d
     /tmp/ccEvSrmF.s:58     .text.Get_Command:0000000000000000 $t
     /tmp/ccEvSrmF.s:65     .text.Get_Command:0000000000000000 Get_Command
     /tmp/ccEvSrmF.s:590    .text.Get_Command:00000000000002cc $d
     /tmp/ccEvSrmF.s:610    .text.Get_Command:0000000000000310 $t
     /tmp/ccEvSrmF.s:674    .text.Get_Command:000000000000036c $d
     /tmp/ccEvSrmF.s:743    .data.command_br3:0000000000000000 command_br3
     /tmp/ccEvSrmF.s:736    .data.command_br2:0000000000000000 command_br2
     /tmp/ccEvSrmF.s:729    .data.command_br1:0000000000000000 command_br1
     /tmp/ccEvSrmF.s:722    .data.command_br0:0000000000000000 command_br0
     /tmp/ccEvSrmF.s:756    .data.command_fuchsia:0000000000000000 command_fuchsia
     /tmp/ccEvSrmF.s:701    .data.command_aqua:0000000000000000 command_aqua
     /tmp/ccEvSrmF.s:784    .data.command_yellow:0000000000000000 command_yellow
     /tmp/ccEvSrmF.s:715    .data.command_blue:0000000000000000 command_blue
     /tmp/ccEvSrmF.s:763    .data.command_green:0000000000000000 command_green
     /tmp/ccEvSrmF.s:770    .data.command_red:0000000000000000 command_red
     /tmp/ccEvSrmF.s:777    .data.command_white:0000000000000000 command_white
     /tmp/ccEvSrmF.s:708    .data.command_black:0000000000000000 command_black
     /tmp/ccEvSrmF.s:749    .data.command_colors:0000000000000000 command_colors
     /tmp/ccEvSrmF.s:697    .data.command_aqua:0000000000000000 $d
     /tmp/ccEvSrmF.s:704    .data.command_black:0000000000000000 $d
     /tmp/ccEvSrmF.s:711    .data.command_blue:0000000000000000 $d
     /tmp/ccEvSrmF.s:718    .data.command_br0:0000000000000000 $d
     /tmp/ccEvSrmF.s:725    .data.command_br1:0000000000000000 $d
     /tmp/ccEvSrmF.s:732    .data.command_br2:0000000000000000 $d
     /tmp/ccEvSrmF.s:739    .data.command_br3:0000000000000000 $d
     /tmp/ccEvSrmF.s:746    .data.command_colors:0000000000000000 $d
     /tmp/ccEvSrmF.s:752    .data.command_fuchsia:0000000000000000 $d
     /tmp/ccEvSrmF.s:759    .data.command_green:0000000000000000 $d
     /tmp/ccEvSrmF.s:766    .data.command_red:0000000000000000 $d
     /tmp/ccEvSrmF.s:773    .data.command_white:0000000000000000 $d
     /tmp/ccEvSrmF.s:780    .data.command_yellow:0000000000000000 $d
     /tmp/ccEvSrmF.s:787    .rodata.Get_Command.str1.4:0000000000000000 $d

UNDEFINED SYMBOLS
memset
count
data_buffer
strcmp
HAL_UART_Transmit
Set_Led_Color
huart1
command_flag
brightness
LedColor
