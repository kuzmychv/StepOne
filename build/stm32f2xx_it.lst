ARM GAS  /tmp/ccxWRNCk.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f2xx_it.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.NMI_Handler,"ax",%progbits
  16              		.align	1
  17              		.global	NMI_Handler
  18              		.arch armv7-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	NMI_Handler:
  25              	.LFB72:
  26              		.file 1 "Core/Src/stm32f2xx_it.c"
   1:Core/Src/stm32f2xx_it.c **** /* USER CODE BEGIN Header */
   2:Core/Src/stm32f2xx_it.c **** /**
   3:Core/Src/stm32f2xx_it.c ****   ******************************************************************************
   4:Core/Src/stm32f2xx_it.c ****   * @file    stm32f2xx_it.c
   5:Core/Src/stm32f2xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Core/Src/stm32f2xx_it.c ****   ******************************************************************************
   7:Core/Src/stm32f2xx_it.c ****   * @attention
   8:Core/Src/stm32f2xx_it.c ****   *
   9:Core/Src/stm32f2xx_it.c ****   * <h2><center>&copy; Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/stm32f2xx_it.c ****   * All rights reserved.</center></h2>
  11:Core/Src/stm32f2xx_it.c ****   *
  12:Core/Src/stm32f2xx_it.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/stm32f2xx_it.c ****   * the "License"; You may not use this file except in compliance with the
  14:Core/Src/stm32f2xx_it.c ****   * License. You may obtain a copy of the License at:
  15:Core/Src/stm32f2xx_it.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/stm32f2xx_it.c ****   *
  17:Core/Src/stm32f2xx_it.c ****   ******************************************************************************
  18:Core/Src/stm32f2xx_it.c ****   */
  19:Core/Src/stm32f2xx_it.c **** /* USER CODE END Header */
  20:Core/Src/stm32f2xx_it.c **** 
  21:Core/Src/stm32f2xx_it.c **** /* Includes ------------------------------------------------------------------*/
  22:Core/Src/stm32f2xx_it.c **** #include "main.h"
  23:Core/Src/stm32f2xx_it.c **** #include "stm32f2xx_it.h"
  24:Core/Src/stm32f2xx_it.c **** /* Private includes ----------------------------------------------------------*/
  25:Core/Src/stm32f2xx_it.c **** /* USER CODE BEGIN Includes */
  26:Core/Src/stm32f2xx_it.c **** /* USER CODE END Includes */
  27:Core/Src/stm32f2xx_it.c **** 
  28:Core/Src/stm32f2xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  29:Core/Src/stm32f2xx_it.c **** /* USER CODE BEGIN TD */
  30:Core/Src/stm32f2xx_it.c **** 
  31:Core/Src/stm32f2xx_it.c **** /* USER CODE END TD */
  32:Core/Src/stm32f2xx_it.c **** 
ARM GAS  /tmp/ccxWRNCk.s 			page 2


  33:Core/Src/stm32f2xx_it.c **** /* Private define ------------------------------------------------------------*/
  34:Core/Src/stm32f2xx_it.c **** /* USER CODE BEGIN PD */
  35:Core/Src/stm32f2xx_it.c **** 
  36:Core/Src/stm32f2xx_it.c **** /* USER CODE END PD */
  37:Core/Src/stm32f2xx_it.c **** 
  38:Core/Src/stm32f2xx_it.c **** /* Private macro -------------------------------------------------------------*/
  39:Core/Src/stm32f2xx_it.c **** /* USER CODE BEGIN PM */
  40:Core/Src/stm32f2xx_it.c **** 
  41:Core/Src/stm32f2xx_it.c **** /* USER CODE END PM */
  42:Core/Src/stm32f2xx_it.c **** 
  43:Core/Src/stm32f2xx_it.c **** /* Private variables ---------------------------------------------------------*/
  44:Core/Src/stm32f2xx_it.c **** /* USER CODE BEGIN PV */
  45:Core/Src/stm32f2xx_it.c **** 
  46:Core/Src/stm32f2xx_it.c **** /* USER CODE END PV */
  47:Core/Src/stm32f2xx_it.c **** 
  48:Core/Src/stm32f2xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  49:Core/Src/stm32f2xx_it.c **** /* USER CODE BEGIN PFP */
  50:Core/Src/stm32f2xx_it.c **** 
  51:Core/Src/stm32f2xx_it.c **** /* USER CODE END PFP */
  52:Core/Src/stm32f2xx_it.c **** 
  53:Core/Src/stm32f2xx_it.c **** /* Private user code ---------------------------------------------------------*/
  54:Core/Src/stm32f2xx_it.c **** /* USER CODE BEGIN 0 */
  55:Core/Src/stm32f2xx_it.c **** 
  56:Core/Src/stm32f2xx_it.c **** /* USER CODE END 0 */
  57:Core/Src/stm32f2xx_it.c **** 
  58:Core/Src/stm32f2xx_it.c **** /* External variables --------------------------------------------------------*/
  59:Core/Src/stm32f2xx_it.c **** extern DMA_HandleTypeDef hdma_usart1_rx;
  60:Core/Src/stm32f2xx_it.c **** extern DMA_HandleTypeDef hdma_usart1_tx;
  61:Core/Src/stm32f2xx_it.c **** extern UART_HandleTypeDef huart1;
  62:Core/Src/stm32f2xx_it.c **** /* USER CODE BEGIN EV */
  63:Core/Src/stm32f2xx_it.c **** 
  64:Core/Src/stm32f2xx_it.c **** /* USER CODE END EV */
  65:Core/Src/stm32f2xx_it.c **** 
  66:Core/Src/stm32f2xx_it.c **** /******************************************************************************/
  67:Core/Src/stm32f2xx_it.c **** /*           Cortex-M3 Processor Interruption and Exception Handlers          */
  68:Core/Src/stm32f2xx_it.c **** /******************************************************************************/
  69:Core/Src/stm32f2xx_it.c **** /**
  70:Core/Src/stm32f2xx_it.c ****   * @brief This function handles Non maskable interrupt.
  71:Core/Src/stm32f2xx_it.c ****   */
  72:Core/Src/stm32f2xx_it.c **** void NMI_Handler(void)
  73:Core/Src/stm32f2xx_it.c **** {
  27              		.loc 1 73 1 view -0
  28              		.cfi_startproc
  29              		@ Volatile: function does not return.
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.L2:
  74:Core/Src/stm32f2xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  75:Core/Src/stm32f2xx_it.c **** 
  76:Core/Src/stm32f2xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  77:Core/Src/stm32f2xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  78:Core/Src/stm32f2xx_it.c ****   while (1)
  34              		.loc 1 78 3 discriminator 1 view .LVU1
  79:Core/Src/stm32f2xx_it.c ****   {
  80:Core/Src/stm32f2xx_it.c ****   }
  35              		.loc 1 80 3 discriminator 1 view .LVU2
ARM GAS  /tmp/ccxWRNCk.s 			page 3


  36 0000 FEE7     		b	.L2
  37              		.cfi_endproc
  38              	.LFE72:
  40              		.section	.text.HardFault_Handler,"ax",%progbits
  41              		.align	1
  42              		.global	HardFault_Handler
  43              		.syntax unified
  44              		.thumb
  45              		.thumb_func
  46              		.fpu softvfp
  48              	HardFault_Handler:
  49              	.LFB73:
  81:Core/Src/stm32f2xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  82:Core/Src/stm32f2xx_it.c **** }
  83:Core/Src/stm32f2xx_it.c **** 
  84:Core/Src/stm32f2xx_it.c **** /**
  85:Core/Src/stm32f2xx_it.c ****   * @brief This function handles Hard fault interrupt.
  86:Core/Src/stm32f2xx_it.c ****   */
  87:Core/Src/stm32f2xx_it.c **** void HardFault_Handler(void)
  88:Core/Src/stm32f2xx_it.c **** {
  50              		.loc 1 88 1 view -0
  51              		.cfi_startproc
  52              		@ Volatile: function does not return.
  53              		@ args = 0, pretend = 0, frame = 0
  54              		@ frame_needed = 0, uses_anonymous_args = 0
  55              		@ link register save eliminated.
  56              	.L4:
  89:Core/Src/stm32f2xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  90:Core/Src/stm32f2xx_it.c **** 
  91:Core/Src/stm32f2xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  92:Core/Src/stm32f2xx_it.c ****   while (1)
  57              		.loc 1 92 3 discriminator 1 view .LVU4
  93:Core/Src/stm32f2xx_it.c ****   {
  94:Core/Src/stm32f2xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  95:Core/Src/stm32f2xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  96:Core/Src/stm32f2xx_it.c ****   }
  58              		.loc 1 96 3 discriminator 1 view .LVU5
  59 0000 FEE7     		b	.L4
  60              		.cfi_endproc
  61              	.LFE73:
  63              		.section	.text.MemManage_Handler,"ax",%progbits
  64              		.align	1
  65              		.global	MemManage_Handler
  66              		.syntax unified
  67              		.thumb
  68              		.thumb_func
  69              		.fpu softvfp
  71              	MemManage_Handler:
  72              	.LFB74:
  97:Core/Src/stm32f2xx_it.c **** }
  98:Core/Src/stm32f2xx_it.c **** 
  99:Core/Src/stm32f2xx_it.c **** /**
 100:Core/Src/stm32f2xx_it.c ****   * @brief This function handles Memory management fault.
 101:Core/Src/stm32f2xx_it.c ****   */
 102:Core/Src/stm32f2xx_it.c **** void MemManage_Handler(void)
 103:Core/Src/stm32f2xx_it.c **** {
  73              		.loc 1 103 1 view -0
ARM GAS  /tmp/ccxWRNCk.s 			page 4


  74              		.cfi_startproc
  75              		@ Volatile: function does not return.
  76              		@ args = 0, pretend = 0, frame = 0
  77              		@ frame_needed = 0, uses_anonymous_args = 0
  78              		@ link register save eliminated.
  79              	.L6:
 104:Core/Src/stm32f2xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 105:Core/Src/stm32f2xx_it.c **** 
 106:Core/Src/stm32f2xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 107:Core/Src/stm32f2xx_it.c ****   while (1)
  80              		.loc 1 107 3 discriminator 1 view .LVU7
 108:Core/Src/stm32f2xx_it.c ****   {
 109:Core/Src/stm32f2xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 110:Core/Src/stm32f2xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 111:Core/Src/stm32f2xx_it.c ****   }
  81              		.loc 1 111 3 discriminator 1 view .LVU8
  82 0000 FEE7     		b	.L6
  83              		.cfi_endproc
  84              	.LFE74:
  86              		.section	.text.BusFault_Handler,"ax",%progbits
  87              		.align	1
  88              		.global	BusFault_Handler
  89              		.syntax unified
  90              		.thumb
  91              		.thumb_func
  92              		.fpu softvfp
  94              	BusFault_Handler:
  95              	.LFB75:
 112:Core/Src/stm32f2xx_it.c **** }
 113:Core/Src/stm32f2xx_it.c **** 
 114:Core/Src/stm32f2xx_it.c **** /**
 115:Core/Src/stm32f2xx_it.c ****   * @brief This function handles Pre-fetch fault, memory access fault.
 116:Core/Src/stm32f2xx_it.c ****   */
 117:Core/Src/stm32f2xx_it.c **** void BusFault_Handler(void)
 118:Core/Src/stm32f2xx_it.c **** {
  96              		.loc 1 118 1 view -0
  97              		.cfi_startproc
  98              		@ Volatile: function does not return.
  99              		@ args = 0, pretend = 0, frame = 0
 100              		@ frame_needed = 0, uses_anonymous_args = 0
 101              		@ link register save eliminated.
 102              	.L8:
 119:Core/Src/stm32f2xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 120:Core/Src/stm32f2xx_it.c **** 
 121:Core/Src/stm32f2xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 122:Core/Src/stm32f2xx_it.c ****   while (1)
 103              		.loc 1 122 3 discriminator 1 view .LVU10
 123:Core/Src/stm32f2xx_it.c ****   {
 124:Core/Src/stm32f2xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 125:Core/Src/stm32f2xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 126:Core/Src/stm32f2xx_it.c ****   }
 104              		.loc 1 126 3 discriminator 1 view .LVU11
 105 0000 FEE7     		b	.L8
 106              		.cfi_endproc
 107              	.LFE75:
 109              		.section	.text.UsageFault_Handler,"ax",%progbits
 110              		.align	1
ARM GAS  /tmp/ccxWRNCk.s 			page 5


 111              		.global	UsageFault_Handler
 112              		.syntax unified
 113              		.thumb
 114              		.thumb_func
 115              		.fpu softvfp
 117              	UsageFault_Handler:
 118              	.LFB76:
 127:Core/Src/stm32f2xx_it.c **** }
 128:Core/Src/stm32f2xx_it.c **** 
 129:Core/Src/stm32f2xx_it.c **** /**
 130:Core/Src/stm32f2xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 131:Core/Src/stm32f2xx_it.c ****   */
 132:Core/Src/stm32f2xx_it.c **** void UsageFault_Handler(void)
 133:Core/Src/stm32f2xx_it.c **** {
 119              		.loc 1 133 1 view -0
 120              		.cfi_startproc
 121              		@ Volatile: function does not return.
 122              		@ args = 0, pretend = 0, frame = 0
 123              		@ frame_needed = 0, uses_anonymous_args = 0
 124              		@ link register save eliminated.
 125              	.L10:
 134:Core/Src/stm32f2xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 135:Core/Src/stm32f2xx_it.c **** 
 136:Core/Src/stm32f2xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 137:Core/Src/stm32f2xx_it.c ****   while (1)
 126              		.loc 1 137 3 discriminator 1 view .LVU13
 138:Core/Src/stm32f2xx_it.c ****   {
 139:Core/Src/stm32f2xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 140:Core/Src/stm32f2xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 141:Core/Src/stm32f2xx_it.c ****   }
 127              		.loc 1 141 3 discriminator 1 view .LVU14
 128 0000 FEE7     		b	.L10
 129              		.cfi_endproc
 130              	.LFE76:
 132              		.section	.text.SVC_Handler,"ax",%progbits
 133              		.align	1
 134              		.global	SVC_Handler
 135              		.syntax unified
 136              		.thumb
 137              		.thumb_func
 138              		.fpu softvfp
 140              	SVC_Handler:
 141              	.LFB77:
 142:Core/Src/stm32f2xx_it.c **** }
 143:Core/Src/stm32f2xx_it.c **** 
 144:Core/Src/stm32f2xx_it.c **** /**
 145:Core/Src/stm32f2xx_it.c ****   * @brief This function handles System service call via SWI instruction.
 146:Core/Src/stm32f2xx_it.c ****   */
 147:Core/Src/stm32f2xx_it.c **** void SVC_Handler(void)
 148:Core/Src/stm32f2xx_it.c **** {
 142              		.loc 1 148 1 view -0
 143              		.cfi_startproc
 144              		@ args = 0, pretend = 0, frame = 0
 145              		@ frame_needed = 0, uses_anonymous_args = 0
 146              		@ link register save eliminated.
 149:Core/Src/stm32f2xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 0 */
 150:Core/Src/stm32f2xx_it.c **** 
ARM GAS  /tmp/ccxWRNCk.s 			page 6


 151:Core/Src/stm32f2xx_it.c ****   /* USER CODE END SVCall_IRQn 0 */
 152:Core/Src/stm32f2xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 1 */
 153:Core/Src/stm32f2xx_it.c **** 
 154:Core/Src/stm32f2xx_it.c ****   /* USER CODE END SVCall_IRQn 1 */
 155:Core/Src/stm32f2xx_it.c **** }
 147              		.loc 1 155 1 view .LVU16
 148 0000 7047     		bx	lr
 149              		.cfi_endproc
 150              	.LFE77:
 152              		.section	.text.DebugMon_Handler,"ax",%progbits
 153              		.align	1
 154              		.global	DebugMon_Handler
 155              		.syntax unified
 156              		.thumb
 157              		.thumb_func
 158              		.fpu softvfp
 160              	DebugMon_Handler:
 161              	.LFB78:
 156:Core/Src/stm32f2xx_it.c **** 
 157:Core/Src/stm32f2xx_it.c **** /**
 158:Core/Src/stm32f2xx_it.c ****   * @brief This function handles Debug monitor.
 159:Core/Src/stm32f2xx_it.c ****   */
 160:Core/Src/stm32f2xx_it.c **** void DebugMon_Handler(void)
 161:Core/Src/stm32f2xx_it.c **** {
 162              		.loc 1 161 1 view -0
 163              		.cfi_startproc
 164              		@ args = 0, pretend = 0, frame = 0
 165              		@ frame_needed = 0, uses_anonymous_args = 0
 166              		@ link register save eliminated.
 162:Core/Src/stm32f2xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 163:Core/Src/stm32f2xx_it.c **** 
 164:Core/Src/stm32f2xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 165:Core/Src/stm32f2xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 166:Core/Src/stm32f2xx_it.c **** 
 167:Core/Src/stm32f2xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 168:Core/Src/stm32f2xx_it.c **** }
 167              		.loc 1 168 1 view .LVU18
 168 0000 7047     		bx	lr
 169              		.cfi_endproc
 170              	.LFE78:
 172              		.section	.text.PendSV_Handler,"ax",%progbits
 173              		.align	1
 174              		.global	PendSV_Handler
 175              		.syntax unified
 176              		.thumb
 177              		.thumb_func
 178              		.fpu softvfp
 180              	PendSV_Handler:
 181              	.LFB79:
 169:Core/Src/stm32f2xx_it.c **** 
 170:Core/Src/stm32f2xx_it.c **** /**
 171:Core/Src/stm32f2xx_it.c ****   * @brief This function handles Pendable request for system service.
 172:Core/Src/stm32f2xx_it.c ****   */
 173:Core/Src/stm32f2xx_it.c **** void PendSV_Handler(void)
 174:Core/Src/stm32f2xx_it.c **** {
 182              		.loc 1 174 1 view -0
 183              		.cfi_startproc
ARM GAS  /tmp/ccxWRNCk.s 			page 7


 184              		@ args = 0, pretend = 0, frame = 0
 185              		@ frame_needed = 0, uses_anonymous_args = 0
 186              		@ link register save eliminated.
 175:Core/Src/stm32f2xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 176:Core/Src/stm32f2xx_it.c **** 
 177:Core/Src/stm32f2xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 178:Core/Src/stm32f2xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 179:Core/Src/stm32f2xx_it.c **** 
 180:Core/Src/stm32f2xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 181:Core/Src/stm32f2xx_it.c **** }
 187              		.loc 1 181 1 view .LVU20
 188 0000 7047     		bx	lr
 189              		.cfi_endproc
 190              	.LFE79:
 192              		.section	.text.SysTick_Handler,"ax",%progbits
 193              		.align	1
 194              		.global	SysTick_Handler
 195              		.syntax unified
 196              		.thumb
 197              		.thumb_func
 198              		.fpu softvfp
 200              	SysTick_Handler:
 201              	.LFB80:
 182:Core/Src/stm32f2xx_it.c **** 
 183:Core/Src/stm32f2xx_it.c **** /**
 184:Core/Src/stm32f2xx_it.c ****   * @brief This function handles System tick timer.
 185:Core/Src/stm32f2xx_it.c ****   */
 186:Core/Src/stm32f2xx_it.c **** void SysTick_Handler(void)
 187:Core/Src/stm32f2xx_it.c **** {
 202              		.loc 1 187 1 view -0
 203              		.cfi_startproc
 204              		@ args = 0, pretend = 0, frame = 0
 205              		@ frame_needed = 0, uses_anonymous_args = 0
 206 0000 08B5     		push	{r3, lr}
 207              	.LCFI0:
 208              		.cfi_def_cfa_offset 8
 209              		.cfi_offset 3, -8
 210              		.cfi_offset 14, -4
 188:Core/Src/stm32f2xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 189:Core/Src/stm32f2xx_it.c **** 
 190:Core/Src/stm32f2xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 191:Core/Src/stm32f2xx_it.c ****   HAL_IncTick();
 211              		.loc 1 191 3 view .LVU22
 212 0002 FFF7FEFF 		bl	HAL_IncTick
 213              	.LVL0:
 192:Core/Src/stm32f2xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 193:Core/Src/stm32f2xx_it.c **** 
 194:Core/Src/stm32f2xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 195:Core/Src/stm32f2xx_it.c **** }
 214              		.loc 1 195 1 is_stmt 0 view .LVU23
 215 0006 08BD     		pop	{r3, pc}
 216              		.cfi_endproc
 217              	.LFE80:
 219              		.section	.text.EXTI9_5_IRQHandler,"ax",%progbits
 220              		.align	1
 221              		.global	EXTI9_5_IRQHandler
 222              		.syntax unified
ARM GAS  /tmp/ccxWRNCk.s 			page 8


 223              		.thumb
 224              		.thumb_func
 225              		.fpu softvfp
 227              	EXTI9_5_IRQHandler:
 228              	.LFB81:
 196:Core/Src/stm32f2xx_it.c **** 
 197:Core/Src/stm32f2xx_it.c **** /******************************************************************************/
 198:Core/Src/stm32f2xx_it.c **** /* STM32F2xx Peripheral Interrupt Handlers                                    */
 199:Core/Src/stm32f2xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 200:Core/Src/stm32f2xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 201:Core/Src/stm32f2xx_it.c **** /* please refer to the startup file (startup_stm32f2xx.s).                    */
 202:Core/Src/stm32f2xx_it.c **** /******************************************************************************/
 203:Core/Src/stm32f2xx_it.c **** 
 204:Core/Src/stm32f2xx_it.c **** /**
 205:Core/Src/stm32f2xx_it.c ****   * @brief This function handles EXTI line[9:5] interrupts.
 206:Core/Src/stm32f2xx_it.c ****   */
 207:Core/Src/stm32f2xx_it.c **** void EXTI9_5_IRQHandler(void)
 208:Core/Src/stm32f2xx_it.c **** {
 229              		.loc 1 208 1 is_stmt 1 view -0
 230              		.cfi_startproc
 231              		@ args = 0, pretend = 0, frame = 0
 232              		@ frame_needed = 0, uses_anonymous_args = 0
 233 0000 08B5     		push	{r3, lr}
 234              	.LCFI1:
 235              		.cfi_def_cfa_offset 8
 236              		.cfi_offset 3, -8
 237              		.cfi_offset 14, -4
 209:Core/Src/stm32f2xx_it.c ****   /* USER CODE BEGIN EXTI9_5_IRQn 0 */
 210:Core/Src/stm32f2xx_it.c **** 
 211:Core/Src/stm32f2xx_it.c ****   /* USER CODE END EXTI9_5_IRQn 0 */
 212:Core/Src/stm32f2xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_9);
 238              		.loc 1 212 3 view .LVU25
 239 0002 4FF40070 		mov	r0, #512
 240 0006 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 241              	.LVL1:
 213:Core/Src/stm32f2xx_it.c ****   /* USER CODE BEGIN EXTI9_5_IRQn 1 */
 214:Core/Src/stm32f2xx_it.c **** 
 215:Core/Src/stm32f2xx_it.c ****   /* USER CODE END EXTI9_5_IRQn 1 */
 216:Core/Src/stm32f2xx_it.c **** }
 242              		.loc 1 216 1 is_stmt 0 view .LVU26
 243 000a 08BD     		pop	{r3, pc}
 244              		.cfi_endproc
 245              	.LFE81:
 247              		.section	.text.USART1_IRQHandler,"ax",%progbits
 248              		.align	1
 249              		.global	USART1_IRQHandler
 250              		.syntax unified
 251              		.thumb
 252              		.thumb_func
 253              		.fpu softvfp
 255              	USART1_IRQHandler:
 256              	.LFB82:
 217:Core/Src/stm32f2xx_it.c **** 
 218:Core/Src/stm32f2xx_it.c **** /**
 219:Core/Src/stm32f2xx_it.c ****   * @brief This function handles USART1 global interrupt.
 220:Core/Src/stm32f2xx_it.c ****   */
 221:Core/Src/stm32f2xx_it.c **** void USART1_IRQHandler(void)
ARM GAS  /tmp/ccxWRNCk.s 			page 9


 222:Core/Src/stm32f2xx_it.c **** {
 257              		.loc 1 222 1 is_stmt 1 view -0
 258              		.cfi_startproc
 259              		@ args = 0, pretend = 0, frame = 0
 260              		@ frame_needed = 0, uses_anonymous_args = 0
 261 0000 08B5     		push	{r3, lr}
 262              	.LCFI2:
 263              		.cfi_def_cfa_offset 8
 264              		.cfi_offset 3, -8
 265              		.cfi_offset 14, -4
 223:Core/Src/stm32f2xx_it.c ****   /* USER CODE BEGIN USART1_IRQn 0 */
 224:Core/Src/stm32f2xx_it.c **** 
 225:Core/Src/stm32f2xx_it.c ****   /* USER CODE END USART1_IRQn 0 */
 226:Core/Src/stm32f2xx_it.c ****   HAL_UART_IRQHandler(&huart1);
 266              		.loc 1 226 3 view .LVU28
 267 0002 0248     		ldr	r0, .L20
 268 0004 FFF7FEFF 		bl	HAL_UART_IRQHandler
 269              	.LVL2:
 227:Core/Src/stm32f2xx_it.c ****   /* USER CODE BEGIN USART1_IRQn 1 */
 228:Core/Src/stm32f2xx_it.c **** 
 229:Core/Src/stm32f2xx_it.c ****   /* USER CODE END USART1_IRQn 1 */
 230:Core/Src/stm32f2xx_it.c **** }
 270              		.loc 1 230 1 is_stmt 0 view .LVU29
 271 0008 08BD     		pop	{r3, pc}
 272              	.L21:
 273 000a 00BF     		.align	2
 274              	.L20:
 275 000c 00000000 		.word	huart1
 276              		.cfi_endproc
 277              	.LFE82:
 279              		.section	.text.DMA2_Stream2_IRQHandler,"ax",%progbits
 280              		.align	1
 281              		.global	DMA2_Stream2_IRQHandler
 282              		.syntax unified
 283              		.thumb
 284              		.thumb_func
 285              		.fpu softvfp
 287              	DMA2_Stream2_IRQHandler:
 288              	.LFB83:
 231:Core/Src/stm32f2xx_it.c **** 
 232:Core/Src/stm32f2xx_it.c **** /**
 233:Core/Src/stm32f2xx_it.c ****   * @brief This function handles DMA2 Stream2 global interrupt.
 234:Core/Src/stm32f2xx_it.c ****   */
 235:Core/Src/stm32f2xx_it.c **** void DMA2_Stream2_IRQHandler(void)
 236:Core/Src/stm32f2xx_it.c **** {
 289              		.loc 1 236 1 is_stmt 1 view -0
 290              		.cfi_startproc
 291              		@ args = 0, pretend = 0, frame = 0
 292              		@ frame_needed = 0, uses_anonymous_args = 0
 293 0000 08B5     		push	{r3, lr}
 294              	.LCFI3:
 295              		.cfi_def_cfa_offset 8
 296              		.cfi_offset 3, -8
 297              		.cfi_offset 14, -4
 237:Core/Src/stm32f2xx_it.c ****   /* USER CODE BEGIN DMA2_Stream2_IRQn 0 */
 238:Core/Src/stm32f2xx_it.c **** 
 239:Core/Src/stm32f2xx_it.c ****   /* USER CODE END DMA2_Stream2_IRQn 0 */
ARM GAS  /tmp/ccxWRNCk.s 			page 10


 240:Core/Src/stm32f2xx_it.c ****   HAL_DMA_IRQHandler(&hdma_usart1_rx);
 298              		.loc 1 240 3 view .LVU31
 299 0002 0248     		ldr	r0, .L24
 300 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 301              	.LVL3:
 241:Core/Src/stm32f2xx_it.c ****   /* USER CODE BEGIN DMA2_Stream2_IRQn 1 */
 242:Core/Src/stm32f2xx_it.c **** 
 243:Core/Src/stm32f2xx_it.c ****   /* USER CODE END DMA2_Stream2_IRQn 1 */
 244:Core/Src/stm32f2xx_it.c **** }
 302              		.loc 1 244 1 is_stmt 0 view .LVU32
 303 0008 08BD     		pop	{r3, pc}
 304              	.L25:
 305 000a 00BF     		.align	2
 306              	.L24:
 307 000c 00000000 		.word	hdma_usart1_rx
 308              		.cfi_endproc
 309              	.LFE83:
 311              		.section	.text.DMA2_Stream7_IRQHandler,"ax",%progbits
 312              		.align	1
 313              		.global	DMA2_Stream7_IRQHandler
 314              		.syntax unified
 315              		.thumb
 316              		.thumb_func
 317              		.fpu softvfp
 319              	DMA2_Stream7_IRQHandler:
 320              	.LFB84:
 245:Core/Src/stm32f2xx_it.c **** 
 246:Core/Src/stm32f2xx_it.c **** /**
 247:Core/Src/stm32f2xx_it.c ****   * @brief This function handles DMA2 Stream7 global interrupt.
 248:Core/Src/stm32f2xx_it.c ****   */
 249:Core/Src/stm32f2xx_it.c **** void DMA2_Stream7_IRQHandler(void)
 250:Core/Src/stm32f2xx_it.c **** {
 321              		.loc 1 250 1 is_stmt 1 view -0
 322              		.cfi_startproc
 323              		@ args = 0, pretend = 0, frame = 0
 324              		@ frame_needed = 0, uses_anonymous_args = 0
 325 0000 08B5     		push	{r3, lr}
 326              	.LCFI4:
 327              		.cfi_def_cfa_offset 8
 328              		.cfi_offset 3, -8
 329              		.cfi_offset 14, -4
 251:Core/Src/stm32f2xx_it.c ****   /* USER CODE BEGIN DMA2_Stream7_IRQn 0 */
 252:Core/Src/stm32f2xx_it.c **** 
 253:Core/Src/stm32f2xx_it.c ****   /* USER CODE END DMA2_Stream7_IRQn 0 */
 254:Core/Src/stm32f2xx_it.c ****   HAL_DMA_IRQHandler(&hdma_usart1_tx);
 330              		.loc 1 254 3 view .LVU34
 331 0002 0248     		ldr	r0, .L28
 332 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 333              	.LVL4:
 255:Core/Src/stm32f2xx_it.c ****   /* USER CODE BEGIN DMA2_Stream7_IRQn 1 */
 256:Core/Src/stm32f2xx_it.c **** 
 257:Core/Src/stm32f2xx_it.c ****   /* USER CODE END DMA2_Stream7_IRQn 1 */
 258:Core/Src/stm32f2xx_it.c **** }
 334              		.loc 1 258 1 is_stmt 0 view .LVU35
 335 0008 08BD     		pop	{r3, pc}
 336              	.L29:
 337 000a 00BF     		.align	2
ARM GAS  /tmp/ccxWRNCk.s 			page 11


 338              	.L28:
 339 000c 00000000 		.word	hdma_usart1_tx
 340              		.cfi_endproc
 341              	.LFE84:
 343              		.text
 344              	.Letext0:
 345              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 346              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 347              		.file 4 "Drivers/CMSIS/Include/core_cm3.h"
 348              		.file 5 "Drivers/CMSIS/Device/ST/STM32F2xx/Include/system_stm32f2xx.h"
 349              		.file 6 "Drivers/CMSIS/Device/ST/STM32F2xx/Include/stm32f205xx.h"
 350              		.file 7 "Drivers/STM32F2xx_HAL_Driver/Inc/stm32f2xx_hal_def.h"
 351              		.file 8 "Drivers/STM32F2xx_HAL_Driver/Inc/stm32f2xx_hal_dma.h"
 352              		.file 9 "Drivers/STM32F2xx_HAL_Driver/Inc/stm32f2xx_hal_uart.h"
 353              		.file 10 "Drivers/STM32F2xx_HAL_Driver/Inc/stm32f2xx_hal.h"
 354              		.file 11 "Drivers/STM32F2xx_HAL_Driver/Inc/stm32f2xx_hal_gpio.h"
ARM GAS  /tmp/ccxWRNCk.s 			page 12


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f2xx_it.c
     /tmp/ccxWRNCk.s:16     .text.NMI_Handler:0000000000000000 $t
     /tmp/ccxWRNCk.s:24     .text.NMI_Handler:0000000000000000 NMI_Handler
     /tmp/ccxWRNCk.s:41     .text.HardFault_Handler:0000000000000000 $t
     /tmp/ccxWRNCk.s:48     .text.HardFault_Handler:0000000000000000 HardFault_Handler
     /tmp/ccxWRNCk.s:64     .text.MemManage_Handler:0000000000000000 $t
     /tmp/ccxWRNCk.s:71     .text.MemManage_Handler:0000000000000000 MemManage_Handler
     /tmp/ccxWRNCk.s:87     .text.BusFault_Handler:0000000000000000 $t
     /tmp/ccxWRNCk.s:94     .text.BusFault_Handler:0000000000000000 BusFault_Handler
     /tmp/ccxWRNCk.s:110    .text.UsageFault_Handler:0000000000000000 $t
     /tmp/ccxWRNCk.s:117    .text.UsageFault_Handler:0000000000000000 UsageFault_Handler
     /tmp/ccxWRNCk.s:133    .text.SVC_Handler:0000000000000000 $t
     /tmp/ccxWRNCk.s:140    .text.SVC_Handler:0000000000000000 SVC_Handler
     /tmp/ccxWRNCk.s:153    .text.DebugMon_Handler:0000000000000000 $t
     /tmp/ccxWRNCk.s:160    .text.DebugMon_Handler:0000000000000000 DebugMon_Handler
     /tmp/ccxWRNCk.s:173    .text.PendSV_Handler:0000000000000000 $t
     /tmp/ccxWRNCk.s:180    .text.PendSV_Handler:0000000000000000 PendSV_Handler
     /tmp/ccxWRNCk.s:193    .text.SysTick_Handler:0000000000000000 $t
     /tmp/ccxWRNCk.s:200    .text.SysTick_Handler:0000000000000000 SysTick_Handler
     /tmp/ccxWRNCk.s:220    .text.EXTI9_5_IRQHandler:0000000000000000 $t
     /tmp/ccxWRNCk.s:227    .text.EXTI9_5_IRQHandler:0000000000000000 EXTI9_5_IRQHandler
     /tmp/ccxWRNCk.s:248    .text.USART1_IRQHandler:0000000000000000 $t
     /tmp/ccxWRNCk.s:255    .text.USART1_IRQHandler:0000000000000000 USART1_IRQHandler
     /tmp/ccxWRNCk.s:275    .text.USART1_IRQHandler:000000000000000c $d
     /tmp/ccxWRNCk.s:280    .text.DMA2_Stream2_IRQHandler:0000000000000000 $t
     /tmp/ccxWRNCk.s:287    .text.DMA2_Stream2_IRQHandler:0000000000000000 DMA2_Stream2_IRQHandler
     /tmp/ccxWRNCk.s:307    .text.DMA2_Stream2_IRQHandler:000000000000000c $d
     /tmp/ccxWRNCk.s:312    .text.DMA2_Stream7_IRQHandler:0000000000000000 $t
     /tmp/ccxWRNCk.s:319    .text.DMA2_Stream7_IRQHandler:0000000000000000 DMA2_Stream7_IRQHandler
     /tmp/ccxWRNCk.s:339    .text.DMA2_Stream7_IRQHandler:000000000000000c $d

UNDEFINED SYMBOLS
HAL_IncTick
HAL_GPIO_EXTI_IRQHandler
HAL_UART_IRQHandler
huart1
HAL_DMA_IRQHandler
hdma_usart1_rx
hdma_usart1_tx
